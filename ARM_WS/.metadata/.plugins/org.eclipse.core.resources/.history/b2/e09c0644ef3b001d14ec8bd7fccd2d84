/*
 * SPI_private.h
 *
 *  Created on: Sep 24, 2022
 *      Author: ziad
 */

#ifndef _MCAL_06_SPI_SPI_PRIVATE_H_
#define _MCAL_06_SPI_SPI_PRIVATE_H_

#define SPI_BASE_ADDRESS 0x40013000

typedef struct
{
    union
    {
        u32 REGISTER;
        struct
        {
            u32 CPHA:1;     //1->write first (should be configured according to the salve)
            u32 CPOL:1;     // 1->normal high (should be configured according to the salve)
            u32 MSTR:1;     //1->master
            u32 BR:3;         //baud rate control -> 000:FPCLK/2 , 111:FPCLK/256
            u32 SPE:1;
            u32 LSBFIRST:1; // 0->MSB ,1->LSB (should be configured according to the salve)
            u32 SSI:1;
            u32 SSM:1;        // used for single slave mode
            u32 RXONLY:1;    // should be kept as 0 if you don't use bidirection mode
            u32 DFF:1;         // data frame format ( 0 ->8bit , 1 ->16 bit)
            u32 CRCNEXT:1;    // must be written as soon as the last data is written to the SPI_DR register.
            u32 CRCEN:1;    // this feature enables an extra saftey layer to SPI , you send an indiependant frame of "keyword" before or after data frame
            u32 BIDIOE:1;    //used for single wire bi-directional mode
            u32 BIDIMODE:1;    //used for single wire bi-directional mode
        }BIT;
    }CR1;



}SPI_t;

#define SPI (*(volatile SPI_t*) SPI_BASE_ADDRESS)

#endif /* 02_MCAL_06_SPI_SPI_PRIVATE_H_ */

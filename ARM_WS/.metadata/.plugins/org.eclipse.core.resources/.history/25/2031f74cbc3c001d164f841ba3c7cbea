/*
 * UART_program.c
 *
 *  Created on: Sep 24, 2022
 *      Author: ziad
 */
#include "../../01-LIB/01-TYPES/STD_TYPPES.h"
#include "../../01-LIB/02-BIT_MATH/BIT_MATH.h"

#include"../../02-MCAL/01-RCC/RCC_interface.h"
#include"../../02-MCAL/02-GPIO/GPIO_interface.h"
#include"../../02-MCAL/03-SYSTICK/SYSTICK_interface.h"

#include"UART_interface.h"
#include"UART_private.h"
#include"UART_config.h"

void UART_vidInit(void){
	/*equation to calc BRR from baud rate*/
	f32 temp = (8000000)/((UART_BAUD_RATE)*16) ;
	/*mantissa */
	u16 mantissa = (u16)temp;
	temp-=mantissa;
	temp *=16;
	/*approximating fraction to the nearest whole number*/
	if( ( temp-( (int) temp ) )*10 >=5 ){temp++;}
	/*fraction*/
	u8 fraction = (u8) temp ;
	UART->BRR.BIT.DIV_MANTISSA = mantissa;
	UART->BRR.BIT.DIV_FRACTION = fraction;
	/*enable Tx */
	UART->CR1.BIT.TE =1;
	/*enable Rx*/
	UART->CR1.BIT.RE =1 ;
	/*enable UART*/
	UART->CR1.BIT.UE = 1;
}

u8 UART_u8Receive(void){
	/*poll on data register not empty flag*/
	while(UART->SR.BIT.RXNE==0);
	/*clear flag by writing zero*/
	UART->SR.BIT.RXNE=0;
	/*return data register when data is ready */
	return UART->DR.BIT.DATA ;
}
void UART_vidTransmitChar(u8 Data){
	/*poll on transmission complete flag*/
	while(UART->SR.BIT.TC==0);
	/*clear flag by writing zero*/
	UART->SR.BIT.TC=0;
	/*put data in UART data register*/
	UART->DR.BIT.DATA = Data ;

}
void UART_vidTransmitString(u8 * dataPtr){
	int i=0;
	/*loop until null character*/
	while(dataPtr[i] != '\0'){
		UART_vidTransmitChar(dataPtr[i++]);
	}
}





Timer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001126  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00001644  00000000  00000000  0000117c  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000aa8  00000000  00000000  000027c0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
       8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
       c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
      10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
      14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
      18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
      1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
      20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
      24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
      28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
      2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
      30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
      34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
      38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
      3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
      40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
      44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
      48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
      4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
      50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61
      60:	0e 94 8c 08 	call	0x1118	; 0x1118 <main>
      64:	0c 94 91 08 	jmp	0x1122	; 0x1122 <_exit>

00000068 <__bad_interrupt>:
      68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_U8_SetPortDir>:

#include "DIO_REG.h"
#include "DIO_int.h"

u8 DIO_U8_SetPortDir(u8 Copy_U8_PORT_NO , u8 COPY_U8_DIR)
{
      6c:	df 93       	push	r29
      6e:	cf 93       	push	r28
      70:	00 d0       	rcall	.+0      	; 0x72 <DIO_U8_SetPortDir+0x6>
      72:	00 d0       	rcall	.+0      	; 0x74 <DIO_U8_SetPortDir+0x8>
      74:	0f 92       	push	r0
      76:	cd b7       	in	r28, 0x3d	; 61
      78:	de b7       	in	r29, 0x3e	; 62
      7a:	8a 83       	std	Y+2, r24	; 0x02
      7c:	6b 83       	std	Y+3, r22	; 0x03
	u8 LOCAL_U8_ERRSTATUS = RT_OK;
      7e:	19 82       	std	Y+1, r1	; 0x01

	switch(Copy_U8_PORT_NO)
      80:	8a 81       	ldd	r24, Y+2	; 0x02
      82:	28 2f       	mov	r18, r24
      84:	30 e0       	ldi	r19, 0x00	; 0
      86:	3d 83       	std	Y+5, r19	; 0x05
      88:	2c 83       	std	Y+4, r18	; 0x04
      8a:	8c 81       	ldd	r24, Y+4	; 0x04
      8c:	9d 81       	ldd	r25, Y+5	; 0x05
      8e:	81 30       	cpi	r24, 0x01	; 1
      90:	91 05       	cpc	r25, r1
      92:	d1 f0       	breq	.+52     	; 0xc8 <DIO_U8_SetPortDir+0x5c>
      94:	2c 81       	ldd	r18, Y+4	; 0x04
      96:	3d 81       	ldd	r19, Y+5	; 0x05
      98:	22 30       	cpi	r18, 0x02	; 2
      9a:	31 05       	cpc	r19, r1
      9c:	2c f4       	brge	.+10     	; 0xa8 <DIO_U8_SetPortDir+0x3c>
      9e:	8c 81       	ldd	r24, Y+4	; 0x04
      a0:	9d 81       	ldd	r25, Y+5	; 0x05
      a2:	00 97       	sbiw	r24, 0x00	; 0
      a4:	61 f0       	breq	.+24     	; 0xbe <DIO_U8_SetPortDir+0x52>
      a6:	1f c0       	rjmp	.+62     	; 0xe6 <DIO_U8_SetPortDir+0x7a>
      a8:	2c 81       	ldd	r18, Y+4	; 0x04
      aa:	3d 81       	ldd	r19, Y+5	; 0x05
      ac:	22 30       	cpi	r18, 0x02	; 2
      ae:	31 05       	cpc	r19, r1
      b0:	81 f0       	breq	.+32     	; 0xd2 <DIO_U8_SetPortDir+0x66>
      b2:	8c 81       	ldd	r24, Y+4	; 0x04
      b4:	9d 81       	ldd	r25, Y+5	; 0x05
      b6:	83 30       	cpi	r24, 0x03	; 3
      b8:	91 05       	cpc	r25, r1
      ba:	81 f0       	breq	.+32     	; 0xdc <DIO_U8_SetPortDir+0x70>
      bc:	14 c0       	rjmp	.+40     	; 0xe6 <DIO_U8_SetPortDir+0x7a>
	{
	case PORT_A:
		DDRA_REG=COPY_U8_DIR;
      be:	ea e3       	ldi	r30, 0x3A	; 58
      c0:	f0 e0       	ldi	r31, 0x00	; 0
      c2:	8b 81       	ldd	r24, Y+3	; 0x03
      c4:	80 83       	st	Z, r24
      c6:	11 c0       	rjmp	.+34     	; 0xea <DIO_U8_SetPortDir+0x7e>
		break;
	case PORT_B:
		DDRB_REG=COPY_U8_DIR;
      c8:	e7 e3       	ldi	r30, 0x37	; 55
      ca:	f0 e0       	ldi	r31, 0x00	; 0
      cc:	8b 81       	ldd	r24, Y+3	; 0x03
      ce:	80 83       	st	Z, r24
      d0:	0c c0       	rjmp	.+24     	; 0xea <DIO_U8_SetPortDir+0x7e>
		break;
	case PORT_C:
		DDRC_REG=COPY_U8_DIR;
      d2:	e4 e3       	ldi	r30, 0x34	; 52
      d4:	f0 e0       	ldi	r31, 0x00	; 0
      d6:	8b 81       	ldd	r24, Y+3	; 0x03
      d8:	80 83       	st	Z, r24
      da:	07 c0       	rjmp	.+14     	; 0xea <DIO_U8_SetPortDir+0x7e>
		break;
	case PORT_D:
		DDRD_REG=COPY_U8_DIR;
      dc:	e1 e3       	ldi	r30, 0x31	; 49
      de:	f0 e0       	ldi	r31, 0x00	; 0
      e0:	8b 81       	ldd	r24, Y+3	; 0x03
      e2:	80 83       	st	Z, r24
      e4:	02 c0       	rjmp	.+4      	; 0xea <DIO_U8_SetPortDir+0x7e>
		break;
	default:
		LOCAL_U8_ERRSTATUS= RT_NOK;
      e6:	81 e0       	ldi	r24, 0x01	; 1
      e8:	89 83       	std	Y+1, r24	; 0x01
		break;
	}

	return LOCAL_U8_ERRSTATUS;
      ea:	89 81       	ldd	r24, Y+1	; 0x01
}
      ec:	0f 90       	pop	r0
      ee:	0f 90       	pop	r0
      f0:	0f 90       	pop	r0
      f2:	0f 90       	pop	r0
      f4:	0f 90       	pop	r0
      f6:	cf 91       	pop	r28
      f8:	df 91       	pop	r29
      fa:	08 95       	ret

000000fc <DIO_U8_SetPortVal>:


u8 DIO_U8_SetPortVal(u8 Copy_U8_PORT_NO , u8 COPY_U8_VAL)
{
      fc:	df 93       	push	r29
      fe:	cf 93       	push	r28
     100:	00 d0       	rcall	.+0      	; 0x102 <DIO_U8_SetPortVal+0x6>
     102:	00 d0       	rcall	.+0      	; 0x104 <DIO_U8_SetPortVal+0x8>
     104:	0f 92       	push	r0
     106:	cd b7       	in	r28, 0x3d	; 61
     108:	de b7       	in	r29, 0x3e	; 62
     10a:	8a 83       	std	Y+2, r24	; 0x02
     10c:	6b 83       	std	Y+3, r22	; 0x03
	u8 LOCAL_U8_ERRSTATUS = RT_OK;
     10e:	19 82       	std	Y+1, r1	; 0x01

	switch(Copy_U8_PORT_NO)
     110:	8a 81       	ldd	r24, Y+2	; 0x02
     112:	28 2f       	mov	r18, r24
     114:	30 e0       	ldi	r19, 0x00	; 0
     116:	3d 83       	std	Y+5, r19	; 0x05
     118:	2c 83       	std	Y+4, r18	; 0x04
     11a:	8c 81       	ldd	r24, Y+4	; 0x04
     11c:	9d 81       	ldd	r25, Y+5	; 0x05
     11e:	81 30       	cpi	r24, 0x01	; 1
     120:	91 05       	cpc	r25, r1
     122:	d1 f0       	breq	.+52     	; 0x158 <DIO_U8_SetPortVal+0x5c>
     124:	2c 81       	ldd	r18, Y+4	; 0x04
     126:	3d 81       	ldd	r19, Y+5	; 0x05
     128:	22 30       	cpi	r18, 0x02	; 2
     12a:	31 05       	cpc	r19, r1
     12c:	2c f4       	brge	.+10     	; 0x138 <DIO_U8_SetPortVal+0x3c>
     12e:	8c 81       	ldd	r24, Y+4	; 0x04
     130:	9d 81       	ldd	r25, Y+5	; 0x05
     132:	00 97       	sbiw	r24, 0x00	; 0
     134:	61 f0       	breq	.+24     	; 0x14e <DIO_U8_SetPortVal+0x52>
     136:	1f c0       	rjmp	.+62     	; 0x176 <DIO_U8_SetPortVal+0x7a>
     138:	2c 81       	ldd	r18, Y+4	; 0x04
     13a:	3d 81       	ldd	r19, Y+5	; 0x05
     13c:	22 30       	cpi	r18, 0x02	; 2
     13e:	31 05       	cpc	r19, r1
     140:	81 f0       	breq	.+32     	; 0x162 <DIO_U8_SetPortVal+0x66>
     142:	8c 81       	ldd	r24, Y+4	; 0x04
     144:	9d 81       	ldd	r25, Y+5	; 0x05
     146:	83 30       	cpi	r24, 0x03	; 3
     148:	91 05       	cpc	r25, r1
     14a:	81 f0       	breq	.+32     	; 0x16c <DIO_U8_SetPortVal+0x70>
     14c:	14 c0       	rjmp	.+40     	; 0x176 <DIO_U8_SetPortVal+0x7a>
	{
	case PORT_A:
		PORTA_REG=COPY_U8_VAL;
     14e:	eb e3       	ldi	r30, 0x3B	; 59
     150:	f0 e0       	ldi	r31, 0x00	; 0
     152:	8b 81       	ldd	r24, Y+3	; 0x03
     154:	80 83       	st	Z, r24
     156:	11 c0       	rjmp	.+34     	; 0x17a <DIO_U8_SetPortVal+0x7e>
		break;
	case PORT_B:
		PORTB_REG=COPY_U8_VAL;
     158:	e8 e3       	ldi	r30, 0x38	; 56
     15a:	f0 e0       	ldi	r31, 0x00	; 0
     15c:	8b 81       	ldd	r24, Y+3	; 0x03
     15e:	80 83       	st	Z, r24
     160:	0c c0       	rjmp	.+24     	; 0x17a <DIO_U8_SetPortVal+0x7e>
		break;
	case PORT_C:
		PORTC_REG=COPY_U8_VAL;
     162:	e5 e3       	ldi	r30, 0x35	; 53
     164:	f0 e0       	ldi	r31, 0x00	; 0
     166:	8b 81       	ldd	r24, Y+3	; 0x03
     168:	80 83       	st	Z, r24
     16a:	07 c0       	rjmp	.+14     	; 0x17a <DIO_U8_SetPortVal+0x7e>
		break;
	case PORT_D:
		PORTD_REG=COPY_U8_VAL;
     16c:	e2 e3       	ldi	r30, 0x32	; 50
     16e:	f0 e0       	ldi	r31, 0x00	; 0
     170:	8b 81       	ldd	r24, Y+3	; 0x03
     172:	80 83       	st	Z, r24
     174:	02 c0       	rjmp	.+4      	; 0x17a <DIO_U8_SetPortVal+0x7e>
		break;
	default:
		LOCAL_U8_ERRSTATUS= RT_NOK;
     176:	81 e0       	ldi	r24, 0x01	; 1
     178:	89 83       	std	Y+1, r24	; 0x01
		break;
	}

	return LOCAL_U8_ERRSTATUS;
     17a:	89 81       	ldd	r24, Y+1	; 0x01
}
     17c:	0f 90       	pop	r0
     17e:	0f 90       	pop	r0
     180:	0f 90       	pop	r0
     182:	0f 90       	pop	r0
     184:	0f 90       	pop	r0
     186:	cf 91       	pop	r28
     188:	df 91       	pop	r29
     18a:	08 95       	ret

0000018c <DIO_U8_GetPortVal>:

u8 DIO_U8_GetPortVal(u8 Copy_U8_PORT_NO , u8* COPY_U8P_VAR)
{
     18c:	df 93       	push	r29
     18e:	cf 93       	push	r28
     190:	00 d0       	rcall	.+0      	; 0x192 <DIO_U8_GetPortVal+0x6>
     192:	00 d0       	rcall	.+0      	; 0x194 <DIO_U8_GetPortVal+0x8>
     194:	00 d0       	rcall	.+0      	; 0x196 <DIO_U8_GetPortVal+0xa>
     196:	cd b7       	in	r28, 0x3d	; 61
     198:	de b7       	in	r29, 0x3e	; 62
     19a:	8a 83       	std	Y+2, r24	; 0x02
     19c:	7c 83       	std	Y+4, r23	; 0x04
     19e:	6b 83       	std	Y+3, r22	; 0x03
	u8 LOCAL_U8_ERRSTATUS = RT_OK;
     1a0:	19 82       	std	Y+1, r1	; 0x01

	switch(Copy_U8_PORT_NO)
     1a2:	8a 81       	ldd	r24, Y+2	; 0x02
     1a4:	28 2f       	mov	r18, r24
     1a6:	30 e0       	ldi	r19, 0x00	; 0
     1a8:	3e 83       	std	Y+6, r19	; 0x06
     1aa:	2d 83       	std	Y+5, r18	; 0x05
     1ac:	8d 81       	ldd	r24, Y+5	; 0x05
     1ae:	9e 81       	ldd	r25, Y+6	; 0x06
     1b0:	81 30       	cpi	r24, 0x01	; 1
     1b2:	91 05       	cpc	r25, r1
     1b4:	e1 f0       	breq	.+56     	; 0x1ee <DIO_U8_GetPortVal+0x62>
     1b6:	2d 81       	ldd	r18, Y+5	; 0x05
     1b8:	3e 81       	ldd	r19, Y+6	; 0x06
     1ba:	22 30       	cpi	r18, 0x02	; 2
     1bc:	31 05       	cpc	r19, r1
     1be:	2c f4       	brge	.+10     	; 0x1ca <DIO_U8_GetPortVal+0x3e>
     1c0:	8d 81       	ldd	r24, Y+5	; 0x05
     1c2:	9e 81       	ldd	r25, Y+6	; 0x06
     1c4:	00 97       	sbiw	r24, 0x00	; 0
     1c6:	61 f0       	breq	.+24     	; 0x1e0 <DIO_U8_GetPortVal+0x54>
     1c8:	27 c0       	rjmp	.+78     	; 0x218 <DIO_U8_GetPortVal+0x8c>
     1ca:	2d 81       	ldd	r18, Y+5	; 0x05
     1cc:	3e 81       	ldd	r19, Y+6	; 0x06
     1ce:	22 30       	cpi	r18, 0x02	; 2
     1d0:	31 05       	cpc	r19, r1
     1d2:	a1 f0       	breq	.+40     	; 0x1fc <DIO_U8_GetPortVal+0x70>
     1d4:	8d 81       	ldd	r24, Y+5	; 0x05
     1d6:	9e 81       	ldd	r25, Y+6	; 0x06
     1d8:	83 30       	cpi	r24, 0x03	; 3
     1da:	91 05       	cpc	r25, r1
     1dc:	b1 f0       	breq	.+44     	; 0x20a <DIO_U8_GetPortVal+0x7e>
     1de:	1c c0       	rjmp	.+56     	; 0x218 <DIO_U8_GetPortVal+0x8c>
	{
	case PORT_A:
		*COPY_U8P_VAR=PINA_REG;
     1e0:	e9 e3       	ldi	r30, 0x39	; 57
     1e2:	f0 e0       	ldi	r31, 0x00	; 0
     1e4:	80 81       	ld	r24, Z
     1e6:	eb 81       	ldd	r30, Y+3	; 0x03
     1e8:	fc 81       	ldd	r31, Y+4	; 0x04
     1ea:	80 83       	st	Z, r24
     1ec:	17 c0       	rjmp	.+46     	; 0x21c <DIO_U8_GetPortVal+0x90>
		break;
	case PORT_B:
		*COPY_U8P_VAR=PINB_REG;
     1ee:	e6 e3       	ldi	r30, 0x36	; 54
     1f0:	f0 e0       	ldi	r31, 0x00	; 0
     1f2:	80 81       	ld	r24, Z
     1f4:	eb 81       	ldd	r30, Y+3	; 0x03
     1f6:	fc 81       	ldd	r31, Y+4	; 0x04
     1f8:	80 83       	st	Z, r24
     1fa:	10 c0       	rjmp	.+32     	; 0x21c <DIO_U8_GetPortVal+0x90>
		break;
	case PORT_C:
		*COPY_U8P_VAR=PINC_REG;
     1fc:	e3 e3       	ldi	r30, 0x33	; 51
     1fe:	f0 e0       	ldi	r31, 0x00	; 0
     200:	80 81       	ld	r24, Z
     202:	eb 81       	ldd	r30, Y+3	; 0x03
     204:	fc 81       	ldd	r31, Y+4	; 0x04
     206:	80 83       	st	Z, r24
     208:	09 c0       	rjmp	.+18     	; 0x21c <DIO_U8_GetPortVal+0x90>
		break;
	case PORT_D:
		*COPY_U8P_VAR=PIND_REG;
     20a:	e0 e3       	ldi	r30, 0x30	; 48
     20c:	f0 e0       	ldi	r31, 0x00	; 0
     20e:	80 81       	ld	r24, Z
     210:	eb 81       	ldd	r30, Y+3	; 0x03
     212:	fc 81       	ldd	r31, Y+4	; 0x04
     214:	80 83       	st	Z, r24
     216:	02 c0       	rjmp	.+4      	; 0x21c <DIO_U8_GetPortVal+0x90>
		break;
	default:
		LOCAL_U8_ERRSTATUS= RT_NOK;
     218:	81 e0       	ldi	r24, 0x01	; 1
     21a:	89 83       	std	Y+1, r24	; 0x01
		break;
	}

	return LOCAL_U8_ERRSTATUS;
     21c:	89 81       	ldd	r24, Y+1	; 0x01
}
     21e:	26 96       	adiw	r28, 0x06	; 6
     220:	0f b6       	in	r0, 0x3f	; 63
     222:	f8 94       	cli
     224:	de bf       	out	0x3e, r29	; 62
     226:	0f be       	out	0x3f, r0	; 63
     228:	cd bf       	out	0x3d, r28	; 61
     22a:	cf 91       	pop	r28
     22c:	df 91       	pop	r29
     22e:	08 95       	ret

00000230 <DIO_U8_SetPinDir>:

u8 DIO_U8_SetPinDir(u8 Copy_U8_PORT_NO , u8 Copy_U8_PIN_NO , u8 COPY_U8_DIR)
{
     230:	df 93       	push	r29
     232:	cf 93       	push	r28
     234:	cd b7       	in	r28, 0x3d	; 61
     236:	de b7       	in	r29, 0x3e	; 62
     238:	28 97       	sbiw	r28, 0x08	; 8
     23a:	0f b6       	in	r0, 0x3f	; 63
     23c:	f8 94       	cli
     23e:	de bf       	out	0x3e, r29	; 62
     240:	0f be       	out	0x3f, r0	; 63
     242:	cd bf       	out	0x3d, r28	; 61
     244:	8a 83       	std	Y+2, r24	; 0x02
     246:	6b 83       	std	Y+3, r22	; 0x03
     248:	4c 83       	std	Y+4, r20	; 0x04
	u8 LOCAL_U8_ERRSTATUS = RT_OK;
     24a:	19 82       	std	Y+1, r1	; 0x01
	if((Copy_U8_PIN_NO>=PIN_0)&&(Copy_U8_PIN_NO<=PIN_7))
     24c:	8b 81       	ldd	r24, Y+3	; 0x03
     24e:	88 30       	cpi	r24, 0x08	; 8
     250:	08 f0       	brcs	.+2      	; 0x254 <DIO_U8_SetPinDir+0x24>
     252:	f4 c0       	rjmp	.+488    	; 0x43c <DIO_U8_SetPinDir+0x20c>
	{
		if(COPY_U8_DIR==INPUT)
     254:	8c 81       	ldd	r24, Y+4	; 0x04
     256:	88 23       	and	r24, r24
     258:	09 f0       	breq	.+2      	; 0x25c <DIO_U8_SetPinDir+0x2c>
     25a:	77 c0       	rjmp	.+238    	; 0x34a <DIO_U8_SetPinDir+0x11a>
		{
			switch(Copy_U8_PORT_NO)
     25c:	8a 81       	ldd	r24, Y+2	; 0x02
     25e:	28 2f       	mov	r18, r24
     260:	30 e0       	ldi	r19, 0x00	; 0
     262:	38 87       	std	Y+8, r19	; 0x08
     264:	2f 83       	std	Y+7, r18	; 0x07
     266:	8f 81       	ldd	r24, Y+7	; 0x07
     268:	98 85       	ldd	r25, Y+8	; 0x08
     26a:	81 30       	cpi	r24, 0x01	; 1
     26c:	91 05       	cpc	r25, r1
     26e:	59 f1       	breq	.+86     	; 0x2c6 <DIO_U8_SetPinDir+0x96>
     270:	2f 81       	ldd	r18, Y+7	; 0x07
     272:	38 85       	ldd	r19, Y+8	; 0x08
     274:	22 30       	cpi	r18, 0x02	; 2
     276:	31 05       	cpc	r19, r1
     278:	2c f4       	brge	.+10     	; 0x284 <DIO_U8_SetPinDir+0x54>
     27a:	8f 81       	ldd	r24, Y+7	; 0x07
     27c:	98 85       	ldd	r25, Y+8	; 0x08
     27e:	00 97       	sbiw	r24, 0x00	; 0
     280:	69 f0       	breq	.+26     	; 0x29c <DIO_U8_SetPinDir+0x6c>
     282:	60 c0       	rjmp	.+192    	; 0x344 <DIO_U8_SetPinDir+0x114>
     284:	2f 81       	ldd	r18, Y+7	; 0x07
     286:	38 85       	ldd	r19, Y+8	; 0x08
     288:	22 30       	cpi	r18, 0x02	; 2
     28a:	31 05       	cpc	r19, r1
     28c:	89 f1       	breq	.+98     	; 0x2f0 <DIO_U8_SetPinDir+0xc0>
     28e:	8f 81       	ldd	r24, Y+7	; 0x07
     290:	98 85       	ldd	r25, Y+8	; 0x08
     292:	83 30       	cpi	r24, 0x03	; 3
     294:	91 05       	cpc	r25, r1
     296:	09 f4       	brne	.+2      	; 0x29a <DIO_U8_SetPinDir+0x6a>
     298:	40 c0       	rjmp	.+128    	; 0x31a <DIO_U8_SetPinDir+0xea>
     29a:	54 c0       	rjmp	.+168    	; 0x344 <DIO_U8_SetPinDir+0x114>
			{
			case PORT_A:
				CLR_BIT(DDRA_REG,Copy_U8_PIN_NO);
     29c:	aa e3       	ldi	r26, 0x3A	; 58
     29e:	b0 e0       	ldi	r27, 0x00	; 0
     2a0:	ea e3       	ldi	r30, 0x3A	; 58
     2a2:	f0 e0       	ldi	r31, 0x00	; 0
     2a4:	80 81       	ld	r24, Z
     2a6:	48 2f       	mov	r20, r24
     2a8:	8b 81       	ldd	r24, Y+3	; 0x03
     2aa:	28 2f       	mov	r18, r24
     2ac:	30 e0       	ldi	r19, 0x00	; 0
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	90 e0       	ldi	r25, 0x00	; 0
     2b2:	02 2e       	mov	r0, r18
     2b4:	02 c0       	rjmp	.+4      	; 0x2ba <DIO_U8_SetPinDir+0x8a>
     2b6:	88 0f       	add	r24, r24
     2b8:	99 1f       	adc	r25, r25
     2ba:	0a 94       	dec	r0
     2bc:	e2 f7       	brpl	.-8      	; 0x2b6 <DIO_U8_SetPinDir+0x86>
     2be:	80 95       	com	r24
     2c0:	84 23       	and	r24, r20
     2c2:	8c 93       	st	X, r24
     2c4:	bd c0       	rjmp	.+378    	; 0x440 <DIO_U8_SetPinDir+0x210>
				break;
			case PORT_B:
				CLR_BIT(DDRB_REG,Copy_U8_PIN_NO);
     2c6:	a7 e3       	ldi	r26, 0x37	; 55
     2c8:	b0 e0       	ldi	r27, 0x00	; 0
     2ca:	e7 e3       	ldi	r30, 0x37	; 55
     2cc:	f0 e0       	ldi	r31, 0x00	; 0
     2ce:	80 81       	ld	r24, Z
     2d0:	48 2f       	mov	r20, r24
     2d2:	8b 81       	ldd	r24, Y+3	; 0x03
     2d4:	28 2f       	mov	r18, r24
     2d6:	30 e0       	ldi	r19, 0x00	; 0
     2d8:	81 e0       	ldi	r24, 0x01	; 1
     2da:	90 e0       	ldi	r25, 0x00	; 0
     2dc:	02 2e       	mov	r0, r18
     2de:	02 c0       	rjmp	.+4      	; 0x2e4 <DIO_U8_SetPinDir+0xb4>
     2e0:	88 0f       	add	r24, r24
     2e2:	99 1f       	adc	r25, r25
     2e4:	0a 94       	dec	r0
     2e6:	e2 f7       	brpl	.-8      	; 0x2e0 <DIO_U8_SetPinDir+0xb0>
     2e8:	80 95       	com	r24
     2ea:	84 23       	and	r24, r20
     2ec:	8c 93       	st	X, r24
     2ee:	a8 c0       	rjmp	.+336    	; 0x440 <DIO_U8_SetPinDir+0x210>
				break;
			case PORT_C:
				CLR_BIT(DDRC_REG,Copy_U8_PIN_NO);
     2f0:	a4 e3       	ldi	r26, 0x34	; 52
     2f2:	b0 e0       	ldi	r27, 0x00	; 0
     2f4:	e4 e3       	ldi	r30, 0x34	; 52
     2f6:	f0 e0       	ldi	r31, 0x00	; 0
     2f8:	80 81       	ld	r24, Z
     2fa:	48 2f       	mov	r20, r24
     2fc:	8b 81       	ldd	r24, Y+3	; 0x03
     2fe:	28 2f       	mov	r18, r24
     300:	30 e0       	ldi	r19, 0x00	; 0
     302:	81 e0       	ldi	r24, 0x01	; 1
     304:	90 e0       	ldi	r25, 0x00	; 0
     306:	02 2e       	mov	r0, r18
     308:	02 c0       	rjmp	.+4      	; 0x30e <DIO_U8_SetPinDir+0xde>
     30a:	88 0f       	add	r24, r24
     30c:	99 1f       	adc	r25, r25
     30e:	0a 94       	dec	r0
     310:	e2 f7       	brpl	.-8      	; 0x30a <DIO_U8_SetPinDir+0xda>
     312:	80 95       	com	r24
     314:	84 23       	and	r24, r20
     316:	8c 93       	st	X, r24
     318:	93 c0       	rjmp	.+294    	; 0x440 <DIO_U8_SetPinDir+0x210>
				break;
			case PORT_D:
				CLR_BIT(DDRD_REG,Copy_U8_PIN_NO);
     31a:	a1 e3       	ldi	r26, 0x31	; 49
     31c:	b0 e0       	ldi	r27, 0x00	; 0
     31e:	e1 e3       	ldi	r30, 0x31	; 49
     320:	f0 e0       	ldi	r31, 0x00	; 0
     322:	80 81       	ld	r24, Z
     324:	48 2f       	mov	r20, r24
     326:	8b 81       	ldd	r24, Y+3	; 0x03
     328:	28 2f       	mov	r18, r24
     32a:	30 e0       	ldi	r19, 0x00	; 0
     32c:	81 e0       	ldi	r24, 0x01	; 1
     32e:	90 e0       	ldi	r25, 0x00	; 0
     330:	02 2e       	mov	r0, r18
     332:	02 c0       	rjmp	.+4      	; 0x338 <DIO_U8_SetPinDir+0x108>
     334:	88 0f       	add	r24, r24
     336:	99 1f       	adc	r25, r25
     338:	0a 94       	dec	r0
     33a:	e2 f7       	brpl	.-8      	; 0x334 <DIO_U8_SetPinDir+0x104>
     33c:	80 95       	com	r24
     33e:	84 23       	and	r24, r20
     340:	8c 93       	st	X, r24
     342:	7e c0       	rjmp	.+252    	; 0x440 <DIO_U8_SetPinDir+0x210>
				break;
			default:
				LOCAL_U8_ERRSTATUS= RT_NOK;
     344:	81 e0       	ldi	r24, 0x01	; 1
     346:	89 83       	std	Y+1, r24	; 0x01
     348:	7b c0       	rjmp	.+246    	; 0x440 <DIO_U8_SetPinDir+0x210>
				break;
			}
		}
		else if (COPY_U8_DIR==OUTPUT)
     34a:	8c 81       	ldd	r24, Y+4	; 0x04
     34c:	81 30       	cpi	r24, 0x01	; 1
     34e:	09 f0       	breq	.+2      	; 0x352 <DIO_U8_SetPinDir+0x122>
     350:	72 c0       	rjmp	.+228    	; 0x436 <DIO_U8_SetPinDir+0x206>
		{
			switch(Copy_U8_PORT_NO)
     352:	8a 81       	ldd	r24, Y+2	; 0x02
     354:	28 2f       	mov	r18, r24
     356:	30 e0       	ldi	r19, 0x00	; 0
     358:	3e 83       	std	Y+6, r19	; 0x06
     35a:	2d 83       	std	Y+5, r18	; 0x05
     35c:	8d 81       	ldd	r24, Y+5	; 0x05
     35e:	9e 81       	ldd	r25, Y+6	; 0x06
     360:	81 30       	cpi	r24, 0x01	; 1
     362:	91 05       	cpc	r25, r1
     364:	49 f1       	breq	.+82     	; 0x3b8 <DIO_U8_SetPinDir+0x188>
     366:	2d 81       	ldd	r18, Y+5	; 0x05
     368:	3e 81       	ldd	r19, Y+6	; 0x06
     36a:	22 30       	cpi	r18, 0x02	; 2
     36c:	31 05       	cpc	r19, r1
     36e:	2c f4       	brge	.+10     	; 0x37a <DIO_U8_SetPinDir+0x14a>
     370:	8d 81       	ldd	r24, Y+5	; 0x05
     372:	9e 81       	ldd	r25, Y+6	; 0x06
     374:	00 97       	sbiw	r24, 0x00	; 0
     376:	61 f0       	breq	.+24     	; 0x390 <DIO_U8_SetPinDir+0x160>
     378:	5b c0       	rjmp	.+182    	; 0x430 <DIO_U8_SetPinDir+0x200>
     37a:	2d 81       	ldd	r18, Y+5	; 0x05
     37c:	3e 81       	ldd	r19, Y+6	; 0x06
     37e:	22 30       	cpi	r18, 0x02	; 2
     380:	31 05       	cpc	r19, r1
     382:	71 f1       	breq	.+92     	; 0x3e0 <DIO_U8_SetPinDir+0x1b0>
     384:	8d 81       	ldd	r24, Y+5	; 0x05
     386:	9e 81       	ldd	r25, Y+6	; 0x06
     388:	83 30       	cpi	r24, 0x03	; 3
     38a:	91 05       	cpc	r25, r1
     38c:	e9 f1       	breq	.+122    	; 0x408 <DIO_U8_SetPinDir+0x1d8>
     38e:	50 c0       	rjmp	.+160    	; 0x430 <DIO_U8_SetPinDir+0x200>
			{
			case PORT_A:
				SET_BIT(DDRA_REG,Copy_U8_PIN_NO);
     390:	aa e3       	ldi	r26, 0x3A	; 58
     392:	b0 e0       	ldi	r27, 0x00	; 0
     394:	ea e3       	ldi	r30, 0x3A	; 58
     396:	f0 e0       	ldi	r31, 0x00	; 0
     398:	80 81       	ld	r24, Z
     39a:	48 2f       	mov	r20, r24
     39c:	8b 81       	ldd	r24, Y+3	; 0x03
     39e:	28 2f       	mov	r18, r24
     3a0:	30 e0       	ldi	r19, 0x00	; 0
     3a2:	81 e0       	ldi	r24, 0x01	; 1
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	02 2e       	mov	r0, r18
     3a8:	02 c0       	rjmp	.+4      	; 0x3ae <DIO_U8_SetPinDir+0x17e>
     3aa:	88 0f       	add	r24, r24
     3ac:	99 1f       	adc	r25, r25
     3ae:	0a 94       	dec	r0
     3b0:	e2 f7       	brpl	.-8      	; 0x3aa <DIO_U8_SetPinDir+0x17a>
     3b2:	84 2b       	or	r24, r20
     3b4:	8c 93       	st	X, r24
     3b6:	44 c0       	rjmp	.+136    	; 0x440 <DIO_U8_SetPinDir+0x210>
				break;
			case PORT_B:
				SET_BIT(DDRB_REG,Copy_U8_PIN_NO);
     3b8:	a7 e3       	ldi	r26, 0x37	; 55
     3ba:	b0 e0       	ldi	r27, 0x00	; 0
     3bc:	e7 e3       	ldi	r30, 0x37	; 55
     3be:	f0 e0       	ldi	r31, 0x00	; 0
     3c0:	80 81       	ld	r24, Z
     3c2:	48 2f       	mov	r20, r24
     3c4:	8b 81       	ldd	r24, Y+3	; 0x03
     3c6:	28 2f       	mov	r18, r24
     3c8:	30 e0       	ldi	r19, 0x00	; 0
     3ca:	81 e0       	ldi	r24, 0x01	; 1
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	02 2e       	mov	r0, r18
     3d0:	02 c0       	rjmp	.+4      	; 0x3d6 <DIO_U8_SetPinDir+0x1a6>
     3d2:	88 0f       	add	r24, r24
     3d4:	99 1f       	adc	r25, r25
     3d6:	0a 94       	dec	r0
     3d8:	e2 f7       	brpl	.-8      	; 0x3d2 <DIO_U8_SetPinDir+0x1a2>
     3da:	84 2b       	or	r24, r20
     3dc:	8c 93       	st	X, r24
     3de:	30 c0       	rjmp	.+96     	; 0x440 <DIO_U8_SetPinDir+0x210>
				break;
			case PORT_C:
				SET_BIT(DDRC_REG,Copy_U8_PIN_NO);
     3e0:	a4 e3       	ldi	r26, 0x34	; 52
     3e2:	b0 e0       	ldi	r27, 0x00	; 0
     3e4:	e4 e3       	ldi	r30, 0x34	; 52
     3e6:	f0 e0       	ldi	r31, 0x00	; 0
     3e8:	80 81       	ld	r24, Z
     3ea:	48 2f       	mov	r20, r24
     3ec:	8b 81       	ldd	r24, Y+3	; 0x03
     3ee:	28 2f       	mov	r18, r24
     3f0:	30 e0       	ldi	r19, 0x00	; 0
     3f2:	81 e0       	ldi	r24, 0x01	; 1
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	02 2e       	mov	r0, r18
     3f8:	02 c0       	rjmp	.+4      	; 0x3fe <DIO_U8_SetPinDir+0x1ce>
     3fa:	88 0f       	add	r24, r24
     3fc:	99 1f       	adc	r25, r25
     3fe:	0a 94       	dec	r0
     400:	e2 f7       	brpl	.-8      	; 0x3fa <DIO_U8_SetPinDir+0x1ca>
     402:	84 2b       	or	r24, r20
     404:	8c 93       	st	X, r24
     406:	1c c0       	rjmp	.+56     	; 0x440 <DIO_U8_SetPinDir+0x210>
				break;
			case PORT_D:
				SET_BIT(DDRD_REG,Copy_U8_PIN_NO);
     408:	a1 e3       	ldi	r26, 0x31	; 49
     40a:	b0 e0       	ldi	r27, 0x00	; 0
     40c:	e1 e3       	ldi	r30, 0x31	; 49
     40e:	f0 e0       	ldi	r31, 0x00	; 0
     410:	80 81       	ld	r24, Z
     412:	48 2f       	mov	r20, r24
     414:	8b 81       	ldd	r24, Y+3	; 0x03
     416:	28 2f       	mov	r18, r24
     418:	30 e0       	ldi	r19, 0x00	; 0
     41a:	81 e0       	ldi	r24, 0x01	; 1
     41c:	90 e0       	ldi	r25, 0x00	; 0
     41e:	02 2e       	mov	r0, r18
     420:	02 c0       	rjmp	.+4      	; 0x426 <DIO_U8_SetPinDir+0x1f6>
     422:	88 0f       	add	r24, r24
     424:	99 1f       	adc	r25, r25
     426:	0a 94       	dec	r0
     428:	e2 f7       	brpl	.-8      	; 0x422 <DIO_U8_SetPinDir+0x1f2>
     42a:	84 2b       	or	r24, r20
     42c:	8c 93       	st	X, r24
     42e:	08 c0       	rjmp	.+16     	; 0x440 <DIO_U8_SetPinDir+0x210>
				break;
			default:
				LOCAL_U8_ERRSTATUS= RT_NOK;
     430:	81 e0       	ldi	r24, 0x01	; 1
     432:	89 83       	std	Y+1, r24	; 0x01
     434:	05 c0       	rjmp	.+10     	; 0x440 <DIO_U8_SetPinDir+0x210>
				break;
			}
		}
		else
		{
			LOCAL_U8_ERRSTATUS= RT_NOK;
     436:	81 e0       	ldi	r24, 0x01	; 1
     438:	89 83       	std	Y+1, r24	; 0x01
     43a:	02 c0       	rjmp	.+4      	; 0x440 <DIO_U8_SetPinDir+0x210>
		}

	}
	else
	{
		LOCAL_U8_ERRSTATUS = RT_NOK;
     43c:	81 e0       	ldi	r24, 0x01	; 1
     43e:	89 83       	std	Y+1, r24	; 0x01
	}

	return LOCAL_U8_ERRSTATUS;
     440:	89 81       	ldd	r24, Y+1	; 0x01
}
     442:	28 96       	adiw	r28, 0x08	; 8
     444:	0f b6       	in	r0, 0x3f	; 63
     446:	f8 94       	cli
     448:	de bf       	out	0x3e, r29	; 62
     44a:	0f be       	out	0x3f, r0	; 63
     44c:	cd bf       	out	0x3d, r28	; 61
     44e:	cf 91       	pop	r28
     450:	df 91       	pop	r29
     452:	08 95       	ret

00000454 <DIO_U8_SetPinVal>:

u8 DIO_U8_SetPinVal(u8 Copy_U8_PORT_NO , u8 Copy_U8_PIN_NO , u8 COPY_U8_VAL)
{
     454:	df 93       	push	r29
     456:	cf 93       	push	r28
     458:	cd b7       	in	r28, 0x3d	; 61
     45a:	de b7       	in	r29, 0x3e	; 62
     45c:	28 97       	sbiw	r28, 0x08	; 8
     45e:	0f b6       	in	r0, 0x3f	; 63
     460:	f8 94       	cli
     462:	de bf       	out	0x3e, r29	; 62
     464:	0f be       	out	0x3f, r0	; 63
     466:	cd bf       	out	0x3d, r28	; 61
     468:	8a 83       	std	Y+2, r24	; 0x02
     46a:	6b 83       	std	Y+3, r22	; 0x03
     46c:	4c 83       	std	Y+4, r20	; 0x04
	u8 LOCAL_U8_ERRSTATUS = RT_OK;
     46e:	19 82       	std	Y+1, r1	; 0x01
	if((Copy_U8_PIN_NO>=PIN_0)&&(Copy_U8_PIN_NO<=PIN_7))
     470:	8b 81       	ldd	r24, Y+3	; 0x03
     472:	88 30       	cpi	r24, 0x08	; 8
     474:	08 f0       	brcs	.+2      	; 0x478 <DIO_U8_SetPinVal+0x24>
     476:	f4 c0       	rjmp	.+488    	; 0x660 <DIO_U8_SetPinVal+0x20c>
	{
		if(COPY_U8_VAL==LOW)
     478:	8c 81       	ldd	r24, Y+4	; 0x04
     47a:	88 23       	and	r24, r24
     47c:	09 f0       	breq	.+2      	; 0x480 <DIO_U8_SetPinVal+0x2c>
     47e:	77 c0       	rjmp	.+238    	; 0x56e <DIO_U8_SetPinVal+0x11a>
		{
			switch(Copy_U8_PORT_NO)
     480:	8a 81       	ldd	r24, Y+2	; 0x02
     482:	28 2f       	mov	r18, r24
     484:	30 e0       	ldi	r19, 0x00	; 0
     486:	38 87       	std	Y+8, r19	; 0x08
     488:	2f 83       	std	Y+7, r18	; 0x07
     48a:	8f 81       	ldd	r24, Y+7	; 0x07
     48c:	98 85       	ldd	r25, Y+8	; 0x08
     48e:	81 30       	cpi	r24, 0x01	; 1
     490:	91 05       	cpc	r25, r1
     492:	59 f1       	breq	.+86     	; 0x4ea <DIO_U8_SetPinVal+0x96>
     494:	2f 81       	ldd	r18, Y+7	; 0x07
     496:	38 85       	ldd	r19, Y+8	; 0x08
     498:	22 30       	cpi	r18, 0x02	; 2
     49a:	31 05       	cpc	r19, r1
     49c:	2c f4       	brge	.+10     	; 0x4a8 <DIO_U8_SetPinVal+0x54>
     49e:	8f 81       	ldd	r24, Y+7	; 0x07
     4a0:	98 85       	ldd	r25, Y+8	; 0x08
     4a2:	00 97       	sbiw	r24, 0x00	; 0
     4a4:	69 f0       	breq	.+26     	; 0x4c0 <DIO_U8_SetPinVal+0x6c>
     4a6:	60 c0       	rjmp	.+192    	; 0x568 <DIO_U8_SetPinVal+0x114>
     4a8:	2f 81       	ldd	r18, Y+7	; 0x07
     4aa:	38 85       	ldd	r19, Y+8	; 0x08
     4ac:	22 30       	cpi	r18, 0x02	; 2
     4ae:	31 05       	cpc	r19, r1
     4b0:	89 f1       	breq	.+98     	; 0x514 <DIO_U8_SetPinVal+0xc0>
     4b2:	8f 81       	ldd	r24, Y+7	; 0x07
     4b4:	98 85       	ldd	r25, Y+8	; 0x08
     4b6:	83 30       	cpi	r24, 0x03	; 3
     4b8:	91 05       	cpc	r25, r1
     4ba:	09 f4       	brne	.+2      	; 0x4be <DIO_U8_SetPinVal+0x6a>
     4bc:	40 c0       	rjmp	.+128    	; 0x53e <DIO_U8_SetPinVal+0xea>
     4be:	54 c0       	rjmp	.+168    	; 0x568 <DIO_U8_SetPinVal+0x114>
			{
			case PORT_A:
				CLR_BIT(PORTA_REG,Copy_U8_PIN_NO);
     4c0:	ab e3       	ldi	r26, 0x3B	; 59
     4c2:	b0 e0       	ldi	r27, 0x00	; 0
     4c4:	eb e3       	ldi	r30, 0x3B	; 59
     4c6:	f0 e0       	ldi	r31, 0x00	; 0
     4c8:	80 81       	ld	r24, Z
     4ca:	48 2f       	mov	r20, r24
     4cc:	8b 81       	ldd	r24, Y+3	; 0x03
     4ce:	28 2f       	mov	r18, r24
     4d0:	30 e0       	ldi	r19, 0x00	; 0
     4d2:	81 e0       	ldi	r24, 0x01	; 1
     4d4:	90 e0       	ldi	r25, 0x00	; 0
     4d6:	02 2e       	mov	r0, r18
     4d8:	02 c0       	rjmp	.+4      	; 0x4de <DIO_U8_SetPinVal+0x8a>
     4da:	88 0f       	add	r24, r24
     4dc:	99 1f       	adc	r25, r25
     4de:	0a 94       	dec	r0
     4e0:	e2 f7       	brpl	.-8      	; 0x4da <DIO_U8_SetPinVal+0x86>
     4e2:	80 95       	com	r24
     4e4:	84 23       	and	r24, r20
     4e6:	8c 93       	st	X, r24
     4e8:	bd c0       	rjmp	.+378    	; 0x664 <DIO_U8_SetPinVal+0x210>
				break;
			case PORT_B:
				CLR_BIT(PORTB_REG,Copy_U8_PIN_NO);
     4ea:	a8 e3       	ldi	r26, 0x38	; 56
     4ec:	b0 e0       	ldi	r27, 0x00	; 0
     4ee:	e8 e3       	ldi	r30, 0x38	; 56
     4f0:	f0 e0       	ldi	r31, 0x00	; 0
     4f2:	80 81       	ld	r24, Z
     4f4:	48 2f       	mov	r20, r24
     4f6:	8b 81       	ldd	r24, Y+3	; 0x03
     4f8:	28 2f       	mov	r18, r24
     4fa:	30 e0       	ldi	r19, 0x00	; 0
     4fc:	81 e0       	ldi	r24, 0x01	; 1
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	02 2e       	mov	r0, r18
     502:	02 c0       	rjmp	.+4      	; 0x508 <DIO_U8_SetPinVal+0xb4>
     504:	88 0f       	add	r24, r24
     506:	99 1f       	adc	r25, r25
     508:	0a 94       	dec	r0
     50a:	e2 f7       	brpl	.-8      	; 0x504 <DIO_U8_SetPinVal+0xb0>
     50c:	80 95       	com	r24
     50e:	84 23       	and	r24, r20
     510:	8c 93       	st	X, r24
     512:	a8 c0       	rjmp	.+336    	; 0x664 <DIO_U8_SetPinVal+0x210>
				break;
			case PORT_C:
				CLR_BIT(PORTC_REG,Copy_U8_PIN_NO);
     514:	a5 e3       	ldi	r26, 0x35	; 53
     516:	b0 e0       	ldi	r27, 0x00	; 0
     518:	e5 e3       	ldi	r30, 0x35	; 53
     51a:	f0 e0       	ldi	r31, 0x00	; 0
     51c:	80 81       	ld	r24, Z
     51e:	48 2f       	mov	r20, r24
     520:	8b 81       	ldd	r24, Y+3	; 0x03
     522:	28 2f       	mov	r18, r24
     524:	30 e0       	ldi	r19, 0x00	; 0
     526:	81 e0       	ldi	r24, 0x01	; 1
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	02 2e       	mov	r0, r18
     52c:	02 c0       	rjmp	.+4      	; 0x532 <DIO_U8_SetPinVal+0xde>
     52e:	88 0f       	add	r24, r24
     530:	99 1f       	adc	r25, r25
     532:	0a 94       	dec	r0
     534:	e2 f7       	brpl	.-8      	; 0x52e <DIO_U8_SetPinVal+0xda>
     536:	80 95       	com	r24
     538:	84 23       	and	r24, r20
     53a:	8c 93       	st	X, r24
     53c:	93 c0       	rjmp	.+294    	; 0x664 <DIO_U8_SetPinVal+0x210>
				break;
			case PORT_D:
				CLR_BIT(PORTD_REG,Copy_U8_PIN_NO);
     53e:	a2 e3       	ldi	r26, 0x32	; 50
     540:	b0 e0       	ldi	r27, 0x00	; 0
     542:	e2 e3       	ldi	r30, 0x32	; 50
     544:	f0 e0       	ldi	r31, 0x00	; 0
     546:	80 81       	ld	r24, Z
     548:	48 2f       	mov	r20, r24
     54a:	8b 81       	ldd	r24, Y+3	; 0x03
     54c:	28 2f       	mov	r18, r24
     54e:	30 e0       	ldi	r19, 0x00	; 0
     550:	81 e0       	ldi	r24, 0x01	; 1
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	02 2e       	mov	r0, r18
     556:	02 c0       	rjmp	.+4      	; 0x55c <DIO_U8_SetPinVal+0x108>
     558:	88 0f       	add	r24, r24
     55a:	99 1f       	adc	r25, r25
     55c:	0a 94       	dec	r0
     55e:	e2 f7       	brpl	.-8      	; 0x558 <DIO_U8_SetPinVal+0x104>
     560:	80 95       	com	r24
     562:	84 23       	and	r24, r20
     564:	8c 93       	st	X, r24
     566:	7e c0       	rjmp	.+252    	; 0x664 <DIO_U8_SetPinVal+0x210>
				break;
			default:
				LOCAL_U8_ERRSTATUS= RT_NOK;
     568:	81 e0       	ldi	r24, 0x01	; 1
     56a:	89 83       	std	Y+1, r24	; 0x01
     56c:	7b c0       	rjmp	.+246    	; 0x664 <DIO_U8_SetPinVal+0x210>
				break;
			}
		}
		else if (COPY_U8_VAL==HIGH)
     56e:	8c 81       	ldd	r24, Y+4	; 0x04
     570:	81 30       	cpi	r24, 0x01	; 1
     572:	09 f0       	breq	.+2      	; 0x576 <DIO_U8_SetPinVal+0x122>
     574:	72 c0       	rjmp	.+228    	; 0x65a <DIO_U8_SetPinVal+0x206>
		{
			switch(Copy_U8_PORT_NO)
     576:	8a 81       	ldd	r24, Y+2	; 0x02
     578:	28 2f       	mov	r18, r24
     57a:	30 e0       	ldi	r19, 0x00	; 0
     57c:	3e 83       	std	Y+6, r19	; 0x06
     57e:	2d 83       	std	Y+5, r18	; 0x05
     580:	8d 81       	ldd	r24, Y+5	; 0x05
     582:	9e 81       	ldd	r25, Y+6	; 0x06
     584:	81 30       	cpi	r24, 0x01	; 1
     586:	91 05       	cpc	r25, r1
     588:	49 f1       	breq	.+82     	; 0x5dc <DIO_U8_SetPinVal+0x188>
     58a:	2d 81       	ldd	r18, Y+5	; 0x05
     58c:	3e 81       	ldd	r19, Y+6	; 0x06
     58e:	22 30       	cpi	r18, 0x02	; 2
     590:	31 05       	cpc	r19, r1
     592:	2c f4       	brge	.+10     	; 0x59e <DIO_U8_SetPinVal+0x14a>
     594:	8d 81       	ldd	r24, Y+5	; 0x05
     596:	9e 81       	ldd	r25, Y+6	; 0x06
     598:	00 97       	sbiw	r24, 0x00	; 0
     59a:	61 f0       	breq	.+24     	; 0x5b4 <DIO_U8_SetPinVal+0x160>
     59c:	5b c0       	rjmp	.+182    	; 0x654 <DIO_U8_SetPinVal+0x200>
     59e:	2d 81       	ldd	r18, Y+5	; 0x05
     5a0:	3e 81       	ldd	r19, Y+6	; 0x06
     5a2:	22 30       	cpi	r18, 0x02	; 2
     5a4:	31 05       	cpc	r19, r1
     5a6:	71 f1       	breq	.+92     	; 0x604 <DIO_U8_SetPinVal+0x1b0>
     5a8:	8d 81       	ldd	r24, Y+5	; 0x05
     5aa:	9e 81       	ldd	r25, Y+6	; 0x06
     5ac:	83 30       	cpi	r24, 0x03	; 3
     5ae:	91 05       	cpc	r25, r1
     5b0:	e9 f1       	breq	.+122    	; 0x62c <DIO_U8_SetPinVal+0x1d8>
     5b2:	50 c0       	rjmp	.+160    	; 0x654 <DIO_U8_SetPinVal+0x200>
			{
			case PORT_A:
				SET_BIT(PORTA_REG,Copy_U8_PIN_NO);
     5b4:	ab e3       	ldi	r26, 0x3B	; 59
     5b6:	b0 e0       	ldi	r27, 0x00	; 0
     5b8:	eb e3       	ldi	r30, 0x3B	; 59
     5ba:	f0 e0       	ldi	r31, 0x00	; 0
     5bc:	80 81       	ld	r24, Z
     5be:	48 2f       	mov	r20, r24
     5c0:	8b 81       	ldd	r24, Y+3	; 0x03
     5c2:	28 2f       	mov	r18, r24
     5c4:	30 e0       	ldi	r19, 0x00	; 0
     5c6:	81 e0       	ldi	r24, 0x01	; 1
     5c8:	90 e0       	ldi	r25, 0x00	; 0
     5ca:	02 2e       	mov	r0, r18
     5cc:	02 c0       	rjmp	.+4      	; 0x5d2 <DIO_U8_SetPinVal+0x17e>
     5ce:	88 0f       	add	r24, r24
     5d0:	99 1f       	adc	r25, r25
     5d2:	0a 94       	dec	r0
     5d4:	e2 f7       	brpl	.-8      	; 0x5ce <DIO_U8_SetPinVal+0x17a>
     5d6:	84 2b       	or	r24, r20
     5d8:	8c 93       	st	X, r24
     5da:	44 c0       	rjmp	.+136    	; 0x664 <DIO_U8_SetPinVal+0x210>
				break;
			case PORT_B:
				SET_BIT(PORTB_REG,Copy_U8_PIN_NO);
     5dc:	a8 e3       	ldi	r26, 0x38	; 56
     5de:	b0 e0       	ldi	r27, 0x00	; 0
     5e0:	e8 e3       	ldi	r30, 0x38	; 56
     5e2:	f0 e0       	ldi	r31, 0x00	; 0
     5e4:	80 81       	ld	r24, Z
     5e6:	48 2f       	mov	r20, r24
     5e8:	8b 81       	ldd	r24, Y+3	; 0x03
     5ea:	28 2f       	mov	r18, r24
     5ec:	30 e0       	ldi	r19, 0x00	; 0
     5ee:	81 e0       	ldi	r24, 0x01	; 1
     5f0:	90 e0       	ldi	r25, 0x00	; 0
     5f2:	02 2e       	mov	r0, r18
     5f4:	02 c0       	rjmp	.+4      	; 0x5fa <DIO_U8_SetPinVal+0x1a6>
     5f6:	88 0f       	add	r24, r24
     5f8:	99 1f       	adc	r25, r25
     5fa:	0a 94       	dec	r0
     5fc:	e2 f7       	brpl	.-8      	; 0x5f6 <DIO_U8_SetPinVal+0x1a2>
     5fe:	84 2b       	or	r24, r20
     600:	8c 93       	st	X, r24
     602:	30 c0       	rjmp	.+96     	; 0x664 <DIO_U8_SetPinVal+0x210>
				break;
			case PORT_C:
				SET_BIT(PORTC_REG,Copy_U8_PIN_NO);
     604:	a5 e3       	ldi	r26, 0x35	; 53
     606:	b0 e0       	ldi	r27, 0x00	; 0
     608:	e5 e3       	ldi	r30, 0x35	; 53
     60a:	f0 e0       	ldi	r31, 0x00	; 0
     60c:	80 81       	ld	r24, Z
     60e:	48 2f       	mov	r20, r24
     610:	8b 81       	ldd	r24, Y+3	; 0x03
     612:	28 2f       	mov	r18, r24
     614:	30 e0       	ldi	r19, 0x00	; 0
     616:	81 e0       	ldi	r24, 0x01	; 1
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	02 2e       	mov	r0, r18
     61c:	02 c0       	rjmp	.+4      	; 0x622 <DIO_U8_SetPinVal+0x1ce>
     61e:	88 0f       	add	r24, r24
     620:	99 1f       	adc	r25, r25
     622:	0a 94       	dec	r0
     624:	e2 f7       	brpl	.-8      	; 0x61e <DIO_U8_SetPinVal+0x1ca>
     626:	84 2b       	or	r24, r20
     628:	8c 93       	st	X, r24
     62a:	1c c0       	rjmp	.+56     	; 0x664 <DIO_U8_SetPinVal+0x210>
				break;
			case PORT_D:
				SET_BIT(PORTD_REG,Copy_U8_PIN_NO);
     62c:	a2 e3       	ldi	r26, 0x32	; 50
     62e:	b0 e0       	ldi	r27, 0x00	; 0
     630:	e2 e3       	ldi	r30, 0x32	; 50
     632:	f0 e0       	ldi	r31, 0x00	; 0
     634:	80 81       	ld	r24, Z
     636:	48 2f       	mov	r20, r24
     638:	8b 81       	ldd	r24, Y+3	; 0x03
     63a:	28 2f       	mov	r18, r24
     63c:	30 e0       	ldi	r19, 0x00	; 0
     63e:	81 e0       	ldi	r24, 0x01	; 1
     640:	90 e0       	ldi	r25, 0x00	; 0
     642:	02 2e       	mov	r0, r18
     644:	02 c0       	rjmp	.+4      	; 0x64a <DIO_U8_SetPinVal+0x1f6>
     646:	88 0f       	add	r24, r24
     648:	99 1f       	adc	r25, r25
     64a:	0a 94       	dec	r0
     64c:	e2 f7       	brpl	.-8      	; 0x646 <DIO_U8_SetPinVal+0x1f2>
     64e:	84 2b       	or	r24, r20
     650:	8c 93       	st	X, r24
     652:	08 c0       	rjmp	.+16     	; 0x664 <DIO_U8_SetPinVal+0x210>
				break;
			default:
				LOCAL_U8_ERRSTATUS= RT_NOK;
     654:	81 e0       	ldi	r24, 0x01	; 1
     656:	89 83       	std	Y+1, r24	; 0x01
     658:	05 c0       	rjmp	.+10     	; 0x664 <DIO_U8_SetPinVal+0x210>
				break;
			}
		}
		else
		{
			LOCAL_U8_ERRSTATUS= RT_NOK;
     65a:	81 e0       	ldi	r24, 0x01	; 1
     65c:	89 83       	std	Y+1, r24	; 0x01
     65e:	02 c0       	rjmp	.+4      	; 0x664 <DIO_U8_SetPinVal+0x210>
		}

	}
	else
	{
		LOCAL_U8_ERRSTATUS = RT_NOK;
     660:	81 e0       	ldi	r24, 0x01	; 1
     662:	89 83       	std	Y+1, r24	; 0x01
	}

	return LOCAL_U8_ERRSTATUS;
     664:	89 81       	ldd	r24, Y+1	; 0x01
}
     666:	28 96       	adiw	r28, 0x08	; 8
     668:	0f b6       	in	r0, 0x3f	; 63
     66a:	f8 94       	cli
     66c:	de bf       	out	0x3e, r29	; 62
     66e:	0f be       	out	0x3f, r0	; 63
     670:	cd bf       	out	0x3d, r28	; 61
     672:	cf 91       	pop	r28
     674:	df 91       	pop	r29
     676:	08 95       	ret

00000678 <DIO_U8_GetPinVal>:

u8 DIO_U8_GetPinVal(u8 Copy_U8_PORT_NO , u8 Copy_U8_PIN_NO , u8* COPY_U8P_VAR)
{
     678:	df 93       	push	r29
     67a:	cf 93       	push	r28
     67c:	cd b7       	in	r28, 0x3d	; 61
     67e:	de b7       	in	r29, 0x3e	; 62
     680:	27 97       	sbiw	r28, 0x07	; 7
     682:	0f b6       	in	r0, 0x3f	; 63
     684:	f8 94       	cli
     686:	de bf       	out	0x3e, r29	; 62
     688:	0f be       	out	0x3f, r0	; 63
     68a:	cd bf       	out	0x3d, r28	; 61
     68c:	8a 83       	std	Y+2, r24	; 0x02
     68e:	6b 83       	std	Y+3, r22	; 0x03
     690:	5d 83       	std	Y+5, r21	; 0x05
     692:	4c 83       	std	Y+4, r20	; 0x04
	u8 LOCAL_U8_ERRSTATUS = RT_OK;
     694:	19 82       	std	Y+1, r1	; 0x01
	if((Copy_U8_PIN_NO>=PIN_0)&&(Copy_U8_PIN_NO<=PIN_7))
     696:	8b 81       	ldd	r24, Y+3	; 0x03
     698:	88 30       	cpi	r24, 0x08	; 8
     69a:	08 f0       	brcs	.+2      	; 0x69e <DIO_U8_GetPinVal+0x26>
     69c:	74 c0       	rjmp	.+232    	; 0x786 <DIO_U8_GetPinVal+0x10e>
	{
		switch(Copy_U8_PORT_NO)
     69e:	8a 81       	ldd	r24, Y+2	; 0x02
     6a0:	28 2f       	mov	r18, r24
     6a2:	30 e0       	ldi	r19, 0x00	; 0
     6a4:	3f 83       	std	Y+7, r19	; 0x07
     6a6:	2e 83       	std	Y+6, r18	; 0x06
     6a8:	4e 81       	ldd	r20, Y+6	; 0x06
     6aa:	5f 81       	ldd	r21, Y+7	; 0x07
     6ac:	41 30       	cpi	r20, 0x01	; 1
     6ae:	51 05       	cpc	r21, r1
     6b0:	59 f1       	breq	.+86     	; 0x708 <DIO_U8_GetPinVal+0x90>
     6b2:	8e 81       	ldd	r24, Y+6	; 0x06
     6b4:	9f 81       	ldd	r25, Y+7	; 0x07
     6b6:	82 30       	cpi	r24, 0x02	; 2
     6b8:	91 05       	cpc	r25, r1
     6ba:	34 f4       	brge	.+12     	; 0x6c8 <DIO_U8_GetPinVal+0x50>
     6bc:	2e 81       	ldd	r18, Y+6	; 0x06
     6be:	3f 81       	ldd	r19, Y+7	; 0x07
     6c0:	21 15       	cp	r18, r1
     6c2:	31 05       	cpc	r19, r1
     6c4:	69 f0       	breq	.+26     	; 0x6e0 <DIO_U8_GetPinVal+0x68>
     6c6:	5c c0       	rjmp	.+184    	; 0x780 <DIO_U8_GetPinVal+0x108>
     6c8:	4e 81       	ldd	r20, Y+6	; 0x06
     6ca:	5f 81       	ldd	r21, Y+7	; 0x07
     6cc:	42 30       	cpi	r20, 0x02	; 2
     6ce:	51 05       	cpc	r21, r1
     6d0:	79 f1       	breq	.+94     	; 0x730 <DIO_U8_GetPinVal+0xb8>
     6d2:	8e 81       	ldd	r24, Y+6	; 0x06
     6d4:	9f 81       	ldd	r25, Y+7	; 0x07
     6d6:	83 30       	cpi	r24, 0x03	; 3
     6d8:	91 05       	cpc	r25, r1
     6da:	09 f4       	brne	.+2      	; 0x6de <DIO_U8_GetPinVal+0x66>
     6dc:	3d c0       	rjmp	.+122    	; 0x758 <DIO_U8_GetPinVal+0xe0>
     6de:	50 c0       	rjmp	.+160    	; 0x780 <DIO_U8_GetPinVal+0x108>
		{
		case PORT_A:
			*COPY_U8P_VAR=GET_BIT(PINA_REG,Copy_U8_PIN_NO);
     6e0:	e9 e3       	ldi	r30, 0x39	; 57
     6e2:	f0 e0       	ldi	r31, 0x00	; 0
     6e4:	80 81       	ld	r24, Z
     6e6:	28 2f       	mov	r18, r24
     6e8:	30 e0       	ldi	r19, 0x00	; 0
     6ea:	8b 81       	ldd	r24, Y+3	; 0x03
     6ec:	88 2f       	mov	r24, r24
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	a9 01       	movw	r20, r18
     6f2:	02 c0       	rjmp	.+4      	; 0x6f8 <DIO_U8_GetPinVal+0x80>
     6f4:	55 95       	asr	r21
     6f6:	47 95       	ror	r20
     6f8:	8a 95       	dec	r24
     6fa:	e2 f7       	brpl	.-8      	; 0x6f4 <DIO_U8_GetPinVal+0x7c>
     6fc:	ca 01       	movw	r24, r20
     6fe:	81 70       	andi	r24, 0x01	; 1
     700:	ec 81       	ldd	r30, Y+4	; 0x04
     702:	fd 81       	ldd	r31, Y+5	; 0x05
     704:	80 83       	st	Z, r24
     706:	41 c0       	rjmp	.+130    	; 0x78a <DIO_U8_GetPinVal+0x112>
			break;
		case PORT_B:
			*COPY_U8P_VAR=GET_BIT(PINB_REG,Copy_U8_PIN_NO);
     708:	e6 e3       	ldi	r30, 0x36	; 54
     70a:	f0 e0       	ldi	r31, 0x00	; 0
     70c:	80 81       	ld	r24, Z
     70e:	28 2f       	mov	r18, r24
     710:	30 e0       	ldi	r19, 0x00	; 0
     712:	8b 81       	ldd	r24, Y+3	; 0x03
     714:	88 2f       	mov	r24, r24
     716:	90 e0       	ldi	r25, 0x00	; 0
     718:	a9 01       	movw	r20, r18
     71a:	02 c0       	rjmp	.+4      	; 0x720 <DIO_U8_GetPinVal+0xa8>
     71c:	55 95       	asr	r21
     71e:	47 95       	ror	r20
     720:	8a 95       	dec	r24
     722:	e2 f7       	brpl	.-8      	; 0x71c <DIO_U8_GetPinVal+0xa4>
     724:	ca 01       	movw	r24, r20
     726:	81 70       	andi	r24, 0x01	; 1
     728:	ec 81       	ldd	r30, Y+4	; 0x04
     72a:	fd 81       	ldd	r31, Y+5	; 0x05
     72c:	80 83       	st	Z, r24
     72e:	2d c0       	rjmp	.+90     	; 0x78a <DIO_U8_GetPinVal+0x112>
			break;
		case PORT_C:
			*COPY_U8P_VAR=GET_BIT(PINC_REG,Copy_U8_PIN_NO);
     730:	e3 e3       	ldi	r30, 0x33	; 51
     732:	f0 e0       	ldi	r31, 0x00	; 0
     734:	80 81       	ld	r24, Z
     736:	28 2f       	mov	r18, r24
     738:	30 e0       	ldi	r19, 0x00	; 0
     73a:	8b 81       	ldd	r24, Y+3	; 0x03
     73c:	88 2f       	mov	r24, r24
     73e:	90 e0       	ldi	r25, 0x00	; 0
     740:	a9 01       	movw	r20, r18
     742:	02 c0       	rjmp	.+4      	; 0x748 <DIO_U8_GetPinVal+0xd0>
     744:	55 95       	asr	r21
     746:	47 95       	ror	r20
     748:	8a 95       	dec	r24
     74a:	e2 f7       	brpl	.-8      	; 0x744 <DIO_U8_GetPinVal+0xcc>
     74c:	ca 01       	movw	r24, r20
     74e:	81 70       	andi	r24, 0x01	; 1
     750:	ec 81       	ldd	r30, Y+4	; 0x04
     752:	fd 81       	ldd	r31, Y+5	; 0x05
     754:	80 83       	st	Z, r24
     756:	19 c0       	rjmp	.+50     	; 0x78a <DIO_U8_GetPinVal+0x112>
			break;
		case PORT_D:
			*COPY_U8P_VAR=GET_BIT(PIND_REG,Copy_U8_PIN_NO);
     758:	e0 e3       	ldi	r30, 0x30	; 48
     75a:	f0 e0       	ldi	r31, 0x00	; 0
     75c:	80 81       	ld	r24, Z
     75e:	28 2f       	mov	r18, r24
     760:	30 e0       	ldi	r19, 0x00	; 0
     762:	8b 81       	ldd	r24, Y+3	; 0x03
     764:	88 2f       	mov	r24, r24
     766:	90 e0       	ldi	r25, 0x00	; 0
     768:	a9 01       	movw	r20, r18
     76a:	02 c0       	rjmp	.+4      	; 0x770 <DIO_U8_GetPinVal+0xf8>
     76c:	55 95       	asr	r21
     76e:	47 95       	ror	r20
     770:	8a 95       	dec	r24
     772:	e2 f7       	brpl	.-8      	; 0x76c <DIO_U8_GetPinVal+0xf4>
     774:	ca 01       	movw	r24, r20
     776:	81 70       	andi	r24, 0x01	; 1
     778:	ec 81       	ldd	r30, Y+4	; 0x04
     77a:	fd 81       	ldd	r31, Y+5	; 0x05
     77c:	80 83       	st	Z, r24
     77e:	05 c0       	rjmp	.+10     	; 0x78a <DIO_U8_GetPinVal+0x112>
			break;
		default:
			LOCAL_U8_ERRSTATUS= RT_NOK;
     780:	81 e0       	ldi	r24, 0x01	; 1
     782:	89 83       	std	Y+1, r24	; 0x01
     784:	02 c0       	rjmp	.+4      	; 0x78a <DIO_U8_GetPinVal+0x112>
			break;
		}
	}
	else
	{
		LOCAL_U8_ERRSTATUS = RT_NOK;
     786:	81 e0       	ldi	r24, 0x01	; 1
     788:	89 83       	std	Y+1, r24	; 0x01
	}

	return LOCAL_U8_ERRSTATUS;
     78a:	89 81       	ldd	r24, Y+1	; 0x01
}
     78c:	27 96       	adiw	r28, 0x07	; 7
     78e:	0f b6       	in	r0, 0x3f	; 63
     790:	f8 94       	cli
     792:	de bf       	out	0x3e, r29	; 62
     794:	0f be       	out	0x3f, r0	; 63
     796:	cd bf       	out	0x3d, r28	; 61
     798:	cf 91       	pop	r28
     79a:	df 91       	pop	r29
     79c:	08 95       	ret

0000079e <DIO_U8_ToggleBit>:

u8 DIO_U8_ToggleBit(u8 Copy_U8_PORT_NO , u8 Copy_U8_PIN_NO )
{
     79e:	df 93       	push	r29
     7a0:	cf 93       	push	r28
     7a2:	00 d0       	rcall	.+0      	; 0x7a4 <DIO_U8_ToggleBit+0x6>
     7a4:	00 d0       	rcall	.+0      	; 0x7a6 <DIO_U8_ToggleBit+0x8>
     7a6:	0f 92       	push	r0
     7a8:	cd b7       	in	r28, 0x3d	; 61
     7aa:	de b7       	in	r29, 0x3e	; 62
     7ac:	8a 83       	std	Y+2, r24	; 0x02
     7ae:	6b 83       	std	Y+3, r22	; 0x03
	u8 LOCAL_U8_ERRSTATUS = RT_OK;
     7b0:	19 82       	std	Y+1, r1	; 0x01
	if((Copy_U8_PIN_NO>=PIN_0)&&(Copy_U8_PIN_NO<=PIN_7))
     7b2:	8b 81       	ldd	r24, Y+3	; 0x03
     7b4:	88 30       	cpi	r24, 0x08	; 8
     7b6:	08 f0       	brcs	.+2      	; 0x7ba <DIO_U8_ToggleBit+0x1c>
     7b8:	72 c0       	rjmp	.+228    	; 0x89e <__stack+0x3f>
		{
			switch(Copy_U8_PORT_NO)
     7ba:	8a 81       	ldd	r24, Y+2	; 0x02
     7bc:	28 2f       	mov	r18, r24
     7be:	30 e0       	ldi	r19, 0x00	; 0
     7c0:	3d 83       	std	Y+5, r19	; 0x05
     7c2:	2c 83       	std	Y+4, r18	; 0x04
     7c4:	8c 81       	ldd	r24, Y+4	; 0x04
     7c6:	9d 81       	ldd	r25, Y+5	; 0x05
     7c8:	81 30       	cpi	r24, 0x01	; 1
     7ca:	91 05       	cpc	r25, r1
     7cc:	49 f1       	breq	.+82     	; 0x820 <DIO_U8_ToggleBit+0x82>
     7ce:	2c 81       	ldd	r18, Y+4	; 0x04
     7d0:	3d 81       	ldd	r19, Y+5	; 0x05
     7d2:	22 30       	cpi	r18, 0x02	; 2
     7d4:	31 05       	cpc	r19, r1
     7d6:	2c f4       	brge	.+10     	; 0x7e2 <DIO_U8_ToggleBit+0x44>
     7d8:	8c 81       	ldd	r24, Y+4	; 0x04
     7da:	9d 81       	ldd	r25, Y+5	; 0x05
     7dc:	00 97       	sbiw	r24, 0x00	; 0
     7de:	61 f0       	breq	.+24     	; 0x7f8 <DIO_U8_ToggleBit+0x5a>
     7e0:	5b c0       	rjmp	.+182    	; 0x898 <__stack+0x39>
     7e2:	2c 81       	ldd	r18, Y+4	; 0x04
     7e4:	3d 81       	ldd	r19, Y+5	; 0x05
     7e6:	22 30       	cpi	r18, 0x02	; 2
     7e8:	31 05       	cpc	r19, r1
     7ea:	71 f1       	breq	.+92     	; 0x848 <DIO_U8_ToggleBit+0xaa>
     7ec:	8c 81       	ldd	r24, Y+4	; 0x04
     7ee:	9d 81       	ldd	r25, Y+5	; 0x05
     7f0:	83 30       	cpi	r24, 0x03	; 3
     7f2:	91 05       	cpc	r25, r1
     7f4:	e9 f1       	breq	.+122    	; 0x870 <__stack+0x11>
     7f6:	50 c0       	rjmp	.+160    	; 0x898 <__stack+0x39>
			{
			case PORT_A:
				TOG_BIT(PORTA_REG,Copy_U8_PIN_NO);
     7f8:	ab e3       	ldi	r26, 0x3B	; 59
     7fa:	b0 e0       	ldi	r27, 0x00	; 0
     7fc:	eb e3       	ldi	r30, 0x3B	; 59
     7fe:	f0 e0       	ldi	r31, 0x00	; 0
     800:	80 81       	ld	r24, Z
     802:	48 2f       	mov	r20, r24
     804:	8b 81       	ldd	r24, Y+3	; 0x03
     806:	28 2f       	mov	r18, r24
     808:	30 e0       	ldi	r19, 0x00	; 0
     80a:	81 e0       	ldi	r24, 0x01	; 1
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	02 2e       	mov	r0, r18
     810:	02 c0       	rjmp	.+4      	; 0x816 <DIO_U8_ToggleBit+0x78>
     812:	88 0f       	add	r24, r24
     814:	99 1f       	adc	r25, r25
     816:	0a 94       	dec	r0
     818:	e2 f7       	brpl	.-8      	; 0x812 <DIO_U8_ToggleBit+0x74>
     81a:	84 27       	eor	r24, r20
     81c:	8c 93       	st	X, r24
     81e:	41 c0       	rjmp	.+130    	; 0x8a2 <__stack+0x43>
				break;
			case PORT_B:
				TOG_BIT(PORTB_REG,Copy_U8_PIN_NO);
     820:	a8 e3       	ldi	r26, 0x38	; 56
     822:	b0 e0       	ldi	r27, 0x00	; 0
     824:	e8 e3       	ldi	r30, 0x38	; 56
     826:	f0 e0       	ldi	r31, 0x00	; 0
     828:	80 81       	ld	r24, Z
     82a:	48 2f       	mov	r20, r24
     82c:	8b 81       	ldd	r24, Y+3	; 0x03
     82e:	28 2f       	mov	r18, r24
     830:	30 e0       	ldi	r19, 0x00	; 0
     832:	81 e0       	ldi	r24, 0x01	; 1
     834:	90 e0       	ldi	r25, 0x00	; 0
     836:	02 2e       	mov	r0, r18
     838:	02 c0       	rjmp	.+4      	; 0x83e <DIO_U8_ToggleBit+0xa0>
     83a:	88 0f       	add	r24, r24
     83c:	99 1f       	adc	r25, r25
     83e:	0a 94       	dec	r0
     840:	e2 f7       	brpl	.-8      	; 0x83a <DIO_U8_ToggleBit+0x9c>
     842:	84 27       	eor	r24, r20
     844:	8c 93       	st	X, r24
     846:	2d c0       	rjmp	.+90     	; 0x8a2 <__stack+0x43>
				break;
			case PORT_C:
				TOG_BIT(PORTC_REG,Copy_U8_PIN_NO);
     848:	a5 e3       	ldi	r26, 0x35	; 53
     84a:	b0 e0       	ldi	r27, 0x00	; 0
     84c:	e5 e3       	ldi	r30, 0x35	; 53
     84e:	f0 e0       	ldi	r31, 0x00	; 0
     850:	80 81       	ld	r24, Z
     852:	48 2f       	mov	r20, r24
     854:	8b 81       	ldd	r24, Y+3	; 0x03
     856:	28 2f       	mov	r18, r24
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	81 e0       	ldi	r24, 0x01	; 1
     85c:	90 e0       	ldi	r25, 0x00	; 0
     85e:	02 2e       	mov	r0, r18
     860:	02 c0       	rjmp	.+4      	; 0x866 <__stack+0x7>
     862:	88 0f       	add	r24, r24
     864:	99 1f       	adc	r25, r25
     866:	0a 94       	dec	r0
     868:	e2 f7       	brpl	.-8      	; 0x862 <__stack+0x3>
     86a:	84 27       	eor	r24, r20
     86c:	8c 93       	st	X, r24
     86e:	19 c0       	rjmp	.+50     	; 0x8a2 <__stack+0x43>
				break;
			case PORT_D:
				TOG_BIT(PORTD_REG,Copy_U8_PIN_NO);
     870:	a2 e3       	ldi	r26, 0x32	; 50
     872:	b0 e0       	ldi	r27, 0x00	; 0
     874:	e2 e3       	ldi	r30, 0x32	; 50
     876:	f0 e0       	ldi	r31, 0x00	; 0
     878:	80 81       	ld	r24, Z
     87a:	48 2f       	mov	r20, r24
     87c:	8b 81       	ldd	r24, Y+3	; 0x03
     87e:	28 2f       	mov	r18, r24
     880:	30 e0       	ldi	r19, 0x00	; 0
     882:	81 e0       	ldi	r24, 0x01	; 1
     884:	90 e0       	ldi	r25, 0x00	; 0
     886:	02 2e       	mov	r0, r18
     888:	02 c0       	rjmp	.+4      	; 0x88e <__stack+0x2f>
     88a:	88 0f       	add	r24, r24
     88c:	99 1f       	adc	r25, r25
     88e:	0a 94       	dec	r0
     890:	e2 f7       	brpl	.-8      	; 0x88a <__stack+0x2b>
     892:	84 27       	eor	r24, r20
     894:	8c 93       	st	X, r24
     896:	05 c0       	rjmp	.+10     	; 0x8a2 <__stack+0x43>
				break;
			default:
				LOCAL_U8_ERRSTATUS= RT_NOK;
     898:	81 e0       	ldi	r24, 0x01	; 1
     89a:	89 83       	std	Y+1, r24	; 0x01
     89c:	02 c0       	rjmp	.+4      	; 0x8a2 <__stack+0x43>
				break;
			}
		}
		else
		{
			LOCAL_U8_ERRSTATUS = RT_NOK;
     89e:	81 e0       	ldi	r24, 0x01	; 1
     8a0:	89 83       	std	Y+1, r24	; 0x01
		}

	return LOCAL_U8_ERRSTATUS;
     8a2:	89 81       	ldd	r24, Y+1	; 0x01
}
     8a4:	0f 90       	pop	r0
     8a6:	0f 90       	pop	r0
     8a8:	0f 90       	pop	r0
     8aa:	0f 90       	pop	r0
     8ac:	0f 90       	pop	r0
     8ae:	cf 91       	pop	r28
     8b0:	df 91       	pop	r29
     8b2:	08 95       	ret

000008b4 <GIE_voidEnable>:
#include "GIE_reg.h"
#include "GIE_int.h"


void GIE_voidEnable(void)
{
     8b4:	df 93       	push	r29
     8b6:	cf 93       	push	r28
     8b8:	cd b7       	in	r28, 0x3d	; 61
     8ba:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SREG_REG,SREG_I);
     8bc:	af e5       	ldi	r26, 0x5F	; 95
     8be:	b0 e0       	ldi	r27, 0x00	; 0
     8c0:	ef e5       	ldi	r30, 0x5F	; 95
     8c2:	f0 e0       	ldi	r31, 0x00	; 0
     8c4:	80 81       	ld	r24, Z
     8c6:	80 68       	ori	r24, 0x80	; 128
     8c8:	8c 93       	st	X, r24
}
     8ca:	cf 91       	pop	r28
     8cc:	df 91       	pop	r29
     8ce:	08 95       	ret

000008d0 <GIE_voidDisable>:

void GIE_voidDisable(void)
{
     8d0:	df 93       	push	r29
     8d2:	cf 93       	push	r28
     8d4:	cd b7       	in	r28, 0x3d	; 61
     8d6:	de b7       	in	r29, 0x3e	; 62

	CLR_BIT(SREG_REG,SREG_I);
     8d8:	af e5       	ldi	r26, 0x5F	; 95
     8da:	b0 e0       	ldi	r27, 0x00	; 0
     8dc:	ef e5       	ldi	r30, 0x5F	; 95
     8de:	f0 e0       	ldi	r31, 0x00	; 0
     8e0:	80 81       	ld	r24, Z
     8e2:	8f 77       	andi	r24, 0x7F	; 127
     8e4:	8c 93       	st	X, r24

}
     8e6:	cf 91       	pop	r28
     8e8:	df 91       	pop	r29
     8ea:	08 95       	ret

000008ec <TIMER_vidInit>:
#include "Timer_cfg.h"
#include "Timer_reg.h"
#include "Timer_int.h"

void TIMER_vidInit(u8 Copy_u8Timertype)
{
     8ec:	df 93       	push	r29
     8ee:	cf 93       	push	r28
     8f0:	0f 92       	push	r0
     8f2:	cd b7       	in	r28, 0x3d	; 61
     8f4:	de b7       	in	r29, 0x3e	; 62
     8f6:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8Timertype==TIMER_0)
     8f8:	89 81       	ldd	r24, Y+1	; 0x01
     8fa:	88 23       	and	r24, r24
     8fc:	71 f4       	brne	.+28     	; 0x91a <TIMER_vidInit+0x2e>
	{
		#if TIMER0_MODE == T0_NORMAL
		/*Set Normal Mode*/
		TCCR0&=CLR_MASK_M;
     8fe:	a3 e5       	ldi	r26, 0x53	; 83
     900:	b0 e0       	ldi	r27, 0x00	; 0
     902:	e3 e5       	ldi	r30, 0x53	; 83
     904:	f0 e0       	ldi	r31, 0x00	; 0
     906:	80 81       	ld	r24, Z
     908:	87 7b       	andi	r24, 0xB7	; 183
     90a:	8c 93       	st	X, r24
		TCCR0|=T0_NORMAL_VAL;
     90c:	a3 e5       	ldi	r26, 0x53	; 83
     90e:	b0 e0       	ldi	r27, 0x00	; 0
     910:	e3 e5       	ldi	r30, 0x53	; 83
     912:	f0 e0       	ldi	r31, 0x00	; 0
     914:	80 81       	ld	r24, Z
     916:	8c 93       	st	X, r24
     918:	30 c0       	rjmp	.+96     	; 0x97a <TIMER_vidInit+0x8e>
		/*Phase Correct PWM*/
		TCCR0&=CLR_MASK_M;
		TCCR0|=T0_PCORRECT_PWM_VAL;
		#endif
	}
	else if(Copy_u8Timertype==TIMER_1)
     91a:	89 81       	ldd	r24, Y+1	; 0x01
     91c:	81 30       	cpi	r24, 0x01	; 1
     91e:	e9 f4       	brne	.+58     	; 0x95a <TIMER_vidInit+0x6e>
		#elif TIMER1_MODE	==	T1_CTC_TOP_ICR
		TCCR1A&=CLR_MASK_MA1;
		TCCR1B&=CLR_MASK_MB1;
		TCCR1B|=24;
		#elif TIMER1_MODE	==	T1_FAST_PWM_ICR
		TCCR1A&=CLR_MASK_MA1;
     920:	af e4       	ldi	r26, 0x4F	; 79
     922:	b0 e0       	ldi	r27, 0x00	; 0
     924:	ef e4       	ldi	r30, 0x4F	; 79
     926:	f0 e0       	ldi	r31, 0x00	; 0
     928:	80 81       	ld	r24, Z
     92a:	8c 7f       	andi	r24, 0xFC	; 252
     92c:	8c 93       	st	X, r24
		TCCR1B&=CLR_MASK_MB1;
     92e:	ae e4       	ldi	r26, 0x4E	; 78
     930:	b0 e0       	ldi	r27, 0x00	; 0
     932:	ee e4       	ldi	r30, 0x4E	; 78
     934:	f0 e0       	ldi	r31, 0x00	; 0
     936:	80 81       	ld	r24, Z
     938:	87 7e       	andi	r24, 0xE7	; 231
     93a:	8c 93       	st	X, r24
		TCCR1A|=2;
     93c:	af e4       	ldi	r26, 0x4F	; 79
     93e:	b0 e0       	ldi	r27, 0x00	; 0
     940:	ef e4       	ldi	r30, 0x4F	; 79
     942:	f0 e0       	ldi	r31, 0x00	; 0
     944:	80 81       	ld	r24, Z
     946:	82 60       	ori	r24, 0x02	; 2
     948:	8c 93       	st	X, r24
		TCCR1B|=24;
     94a:	ae e4       	ldi	r26, 0x4E	; 78
     94c:	b0 e0       	ldi	r27, 0x00	; 0
     94e:	ee e4       	ldi	r30, 0x4E	; 78
     950:	f0 e0       	ldi	r31, 0x00	; 0
     952:	80 81       	ld	r24, Z
     954:	88 61       	ori	r24, 0x18	; 24
     956:	8c 93       	st	X, r24
     958:	10 c0       	rjmp	.+32     	; 0x97a <TIMER_vidInit+0x8e>
		TCCR1A|=3;
		TCCR1B|=24;
		#endif

	}
	else if(Copy_u8Timertype==TIMER_2)
     95a:	89 81       	ldd	r24, Y+1	; 0x01
     95c:	82 30       	cpi	r24, 0x02	; 2
     95e:	69 f4       	brne	.+26     	; 0x97a <TIMER_vidInit+0x8e>
	{
		#if TIMER2_MODE == T2_NORMAL
		/*Set Normal Mode*/
		TCCR2&=CLR_MASK_M;
     960:	a5 e4       	ldi	r26, 0x45	; 69
     962:	b0 e0       	ldi	r27, 0x00	; 0
     964:	e5 e4       	ldi	r30, 0x45	; 69
     966:	f0 e0       	ldi	r31, 0x00	; 0
     968:	80 81       	ld	r24, Z
     96a:	87 7b       	andi	r24, 0xB7	; 183
     96c:	8c 93       	st	X, r24
		TCCR2|=T2_NORMAL_VAL;
     96e:	a5 e4       	ldi	r26, 0x45	; 69
     970:	b0 e0       	ldi	r27, 0x00	; 0
     972:	e5 e4       	ldi	r30, 0x45	; 69
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	80 81       	ld	r24, Z
     978:	8c 93       	st	X, r24
		TCCR2&=CLR_MASK_M;
		TCCR2|=T2_PCORRECT_PWM_VAL;
		#endif

	}
}
     97a:	0f 90       	pop	r0
     97c:	cf 91       	pop	r28
     97e:	df 91       	pop	r29
     980:	08 95       	ret

00000982 <TIMER_voidReset>:

void TIMER_voidReset(u8 Copy_u8Timertype)
{
     982:	df 93       	push	r29
     984:	cf 93       	push	r28
     986:	0f 92       	push	r0
     988:	cd b7       	in	r28, 0x3d	; 61
     98a:	de b7       	in	r29, 0x3e	; 62
     98c:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8Timertype==TIMER_0)
     98e:	89 81       	ldd	r24, Y+1	; 0x01
     990:	88 23       	and	r24, r24
     992:	21 f4       	brne	.+8      	; 0x99c <TIMER_voidReset+0x1a>
	{
		TCNT0=0;
     994:	e2 e5       	ldi	r30, 0x52	; 82
     996:	f0 e0       	ldi	r31, 0x00	; 0
     998:	10 82       	st	Z, r1
     99a:	0e c0       	rjmp	.+28     	; 0x9b8 <TIMER_voidReset+0x36>
	}
	else if(Copy_u8Timertype==TIMER_1)
     99c:	89 81       	ldd	r24, Y+1	; 0x01
     99e:	81 30       	cpi	r24, 0x01	; 1
     9a0:	29 f4       	brne	.+10     	; 0x9ac <TIMER_voidReset+0x2a>
	{
		TCNT1=0;
     9a2:	ec e4       	ldi	r30, 0x4C	; 76
     9a4:	f0 e0       	ldi	r31, 0x00	; 0
     9a6:	11 82       	std	Z+1, r1	; 0x01
     9a8:	10 82       	st	Z, r1
     9aa:	06 c0       	rjmp	.+12     	; 0x9b8 <TIMER_voidReset+0x36>
	}
	else if(Copy_u8Timertype==TIMER_2)
     9ac:	89 81       	ldd	r24, Y+1	; 0x01
     9ae:	82 30       	cpi	r24, 0x02	; 2
     9b0:	19 f4       	brne	.+6      	; 0x9b8 <TIMER_voidReset+0x36>
	{
		TCNT2=0;
     9b2:	e4 e4       	ldi	r30, 0x44	; 68
     9b4:	f0 e0       	ldi	r31, 0x00	; 0
     9b6:	10 82       	st	Z, r1
	}
}
     9b8:	0f 90       	pop	r0
     9ba:	cf 91       	pop	r28
     9bc:	df 91       	pop	r29
     9be:	08 95       	ret

000009c0 <TIMER_u16GetValue>:

u16	TIMER_u16GetValue(u8 Copy_u8Timertype)
{
     9c0:	df 93       	push	r29
     9c2:	cf 93       	push	r28
     9c4:	00 d0       	rcall	.+0      	; 0x9c6 <TIMER_u16GetValue+0x6>
     9c6:	0f 92       	push	r0
     9c8:	cd b7       	in	r28, 0x3d	; 61
     9ca:	de b7       	in	r29, 0x3e	; 62
     9cc:	8b 83       	std	Y+3, r24	; 0x03
	u16 Local_TicksVal=0;
     9ce:	1a 82       	std	Y+2, r1	; 0x02
     9d0:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_u8Timertype==TIMER_0)
     9d2:	8b 81       	ldd	r24, Y+3	; 0x03
     9d4:	88 23       	and	r24, r24
     9d6:	41 f4       	brne	.+16     	; 0x9e8 <TIMER_u16GetValue+0x28>
	{
		Local_TicksVal=TCNT0;
     9d8:	e2 e5       	ldi	r30, 0x52	; 82
     9da:	f0 e0       	ldi	r31, 0x00	; 0
     9dc:	80 81       	ld	r24, Z
     9de:	88 2f       	mov	r24, r24
     9e0:	90 e0       	ldi	r25, 0x00	; 0
     9e2:	9a 83       	std	Y+2, r25	; 0x02
     9e4:	89 83       	std	Y+1, r24	; 0x01
     9e6:	14 c0       	rjmp	.+40     	; 0xa10 <TIMER_u16GetValue+0x50>
	}
	else if(Copy_u8Timertype==TIMER_1)
     9e8:	8b 81       	ldd	r24, Y+3	; 0x03
     9ea:	81 30       	cpi	r24, 0x01	; 1
     9ec:	39 f4       	brne	.+14     	; 0x9fc <TIMER_u16GetValue+0x3c>
	{
		Local_TicksVal=TCNT1;
     9ee:	ec e4       	ldi	r30, 0x4C	; 76
     9f0:	f0 e0       	ldi	r31, 0x00	; 0
     9f2:	80 81       	ld	r24, Z
     9f4:	91 81       	ldd	r25, Z+1	; 0x01
     9f6:	9a 83       	std	Y+2, r25	; 0x02
     9f8:	89 83       	std	Y+1, r24	; 0x01
     9fa:	0a c0       	rjmp	.+20     	; 0xa10 <TIMER_u16GetValue+0x50>
	}
	else if(Copy_u8Timertype==TIMER_2)
     9fc:	8b 81       	ldd	r24, Y+3	; 0x03
     9fe:	82 30       	cpi	r24, 0x02	; 2
     a00:	39 f4       	brne	.+14     	; 0xa10 <TIMER_u16GetValue+0x50>
	{
		Local_TicksVal=TCNT2;
     a02:	e4 e4       	ldi	r30, 0x44	; 68
     a04:	f0 e0       	ldi	r31, 0x00	; 0
     a06:	80 81       	ld	r24, Z
     a08:	88 2f       	mov	r24, r24
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	9a 83       	std	Y+2, r25	; 0x02
     a0e:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_TicksVal;
     a10:	89 81       	ldd	r24, Y+1	; 0x01
     a12:	9a 81       	ldd	r25, Y+2	; 0x02
}
     a14:	0f 90       	pop	r0
     a16:	0f 90       	pop	r0
     a18:	0f 90       	pop	r0
     a1a:	cf 91       	pop	r28
     a1c:	df 91       	pop	r29
     a1e:	08 95       	ret

00000a20 <TIMER_vidClkSlct>:

void TIMER_vidClkSlct(u8 Copy_u8Timertype,u8 Copy_u8Prescaler)
{
     a20:	df 93       	push	r29
     a22:	cf 93       	push	r28
     a24:	00 d0       	rcall	.+0      	; 0xa26 <TIMER_vidClkSlct+0x6>
     a26:	cd b7       	in	r28, 0x3d	; 61
     a28:	de b7       	in	r29, 0x3e	; 62
     a2a:	89 83       	std	Y+1, r24	; 0x01
     a2c:	6a 83       	std	Y+2, r22	; 0x02

	if(Copy_u8Timertype==TIMER_0)
     a2e:	89 81       	ldd	r24, Y+1	; 0x01
     a30:	88 23       	and	r24, r24
     a32:	81 f4       	brne	.+32     	; 0xa54 <TIMER_vidClkSlct+0x34>
	{
		TCCR0 &=CLR_MASK_PS;
     a34:	a3 e5       	ldi	r26, 0x53	; 83
     a36:	b0 e0       	ldi	r27, 0x00	; 0
     a38:	e3 e5       	ldi	r30, 0x53	; 83
     a3a:	f0 e0       	ldi	r31, 0x00	; 0
     a3c:	80 81       	ld	r24, Z
     a3e:	88 7f       	andi	r24, 0xF8	; 248
     a40:	8c 93       	st	X, r24
		TCCR0|=Copy_u8Prescaler;
     a42:	a3 e5       	ldi	r26, 0x53	; 83
     a44:	b0 e0       	ldi	r27, 0x00	; 0
     a46:	e3 e5       	ldi	r30, 0x53	; 83
     a48:	f0 e0       	ldi	r31, 0x00	; 0
     a4a:	90 81       	ld	r25, Z
     a4c:	8a 81       	ldd	r24, Y+2	; 0x02
     a4e:	89 2b       	or	r24, r25
     a50:	8c 93       	st	X, r24
     a52:	25 c0       	rjmp	.+74     	; 0xa9e <TIMER_vidClkSlct+0x7e>
	}
	else if(Copy_u8Timertype==TIMER_1)
     a54:	89 81       	ldd	r24, Y+1	; 0x01
     a56:	81 30       	cpi	r24, 0x01	; 1
     a58:	81 f4       	brne	.+32     	; 0xa7a <TIMER_vidClkSlct+0x5a>
	{
		TCCR1B &=CLR_MASK_PS;
     a5a:	ae e4       	ldi	r26, 0x4E	; 78
     a5c:	b0 e0       	ldi	r27, 0x00	; 0
     a5e:	ee e4       	ldi	r30, 0x4E	; 78
     a60:	f0 e0       	ldi	r31, 0x00	; 0
     a62:	80 81       	ld	r24, Z
     a64:	88 7f       	andi	r24, 0xF8	; 248
     a66:	8c 93       	st	X, r24
		TCCR1B|=Copy_u8Prescaler;
     a68:	ae e4       	ldi	r26, 0x4E	; 78
     a6a:	b0 e0       	ldi	r27, 0x00	; 0
     a6c:	ee e4       	ldi	r30, 0x4E	; 78
     a6e:	f0 e0       	ldi	r31, 0x00	; 0
     a70:	90 81       	ld	r25, Z
     a72:	8a 81       	ldd	r24, Y+2	; 0x02
     a74:	89 2b       	or	r24, r25
     a76:	8c 93       	st	X, r24
     a78:	12 c0       	rjmp	.+36     	; 0xa9e <TIMER_vidClkSlct+0x7e>

	}
	else if(Copy_u8Timertype==TIMER_2)
     a7a:	89 81       	ldd	r24, Y+1	; 0x01
     a7c:	82 30       	cpi	r24, 0x02	; 2
     a7e:	79 f4       	brne	.+30     	; 0xa9e <TIMER_vidClkSlct+0x7e>
	{
		TCCR2 &=CLR_MASK_PS;
     a80:	a5 e4       	ldi	r26, 0x45	; 69
     a82:	b0 e0       	ldi	r27, 0x00	; 0
     a84:	e5 e4       	ldi	r30, 0x45	; 69
     a86:	f0 e0       	ldi	r31, 0x00	; 0
     a88:	80 81       	ld	r24, Z
     a8a:	88 7f       	andi	r24, 0xF8	; 248
     a8c:	8c 93       	st	X, r24
		TCCR2|=Copy_u8Prescaler;
     a8e:	a5 e4       	ldi	r26, 0x45	; 69
     a90:	b0 e0       	ldi	r27, 0x00	; 0
     a92:	e5 e4       	ldi	r30, 0x45	; 69
     a94:	f0 e0       	ldi	r31, 0x00	; 0
     a96:	90 81       	ld	r25, Z
     a98:	8a 81       	ldd	r24, Y+2	; 0x02
     a9a:	89 2b       	or	r24, r25
     a9c:	8c 93       	st	X, r24
	}

}
     a9e:	0f 90       	pop	r0
     aa0:	0f 90       	pop	r0
     aa2:	cf 91       	pop	r28
     aa4:	df 91       	pop	r29
     aa6:	08 95       	ret

00000aa8 <TIMER_vidCOM>:

void TIMER_vidCOM(u8 Copy_u8Timertype,u8 Copy_u8TimerMode,u8 Copy_u8COMMode)
{
     aa8:	df 93       	push	r29
     aaa:	cf 93       	push	r28
     aac:	cd b7       	in	r28, 0x3d	; 61
     aae:	de b7       	in	r29, 0x3e	; 62
     ab0:	63 97       	sbiw	r28, 0x13	; 19
     ab2:	0f b6       	in	r0, 0x3f	; 63
     ab4:	f8 94       	cli
     ab6:	de bf       	out	0x3e, r29	; 62
     ab8:	0f be       	out	0x3f, r0	; 63
     aba:	cd bf       	out	0x3d, r28	; 61
     abc:	89 83       	std	Y+1, r24	; 0x01
     abe:	6a 83       	std	Y+2, r22	; 0x02
     ac0:	4b 83       	std	Y+3, r20	; 0x03
	if(Copy_u8Timertype==TIMER_0)
     ac2:	89 81       	ldd	r24, Y+1	; 0x01
     ac4:	88 23       	and	r24, r24
     ac6:	09 f0       	breq	.+2      	; 0xaca <TIMER_vidCOM+0x22>
     ac8:	6b c0       	rjmp	.+214    	; 0xba0 <TIMER_vidCOM+0xf8>
	{
		DIO_U8_SetPinDir(PORT_B,PIN_3,HIGH);
     aca:	81 e0       	ldi	r24, 0x01	; 1
     acc:	63 e0       	ldi	r22, 0x03	; 3
     ace:	41 e0       	ldi	r20, 0x01	; 1
     ad0:	0e 94 18 01 	call	0x230	; 0x230 <DIO_U8_SetPinDir>
		if(Copy_u8TimerMode==T0_FAST_PWM)
     ad4:	8a 81       	ldd	r24, Y+2	; 0x02
     ad6:	82 30       	cpi	r24, 0x02	; 2
     ad8:	69 f5       	brne	.+90     	; 0xb34 <TIMER_vidCOM+0x8c>
		{
			switch(Copy_u8COMMode)
     ada:	8b 81       	ldd	r24, Y+3	; 0x03
     adc:	28 2f       	mov	r18, r24
     ade:	30 e0       	ldi	r19, 0x00	; 0
     ae0:	3b 8b       	std	Y+19, r19	; 0x13
     ae2:	2a 8b       	std	Y+18, r18	; 0x12
     ae4:	8a 89       	ldd	r24, Y+18	; 0x12
     ae6:	9b 89       	ldd	r25, Y+19	; 0x13
     ae8:	00 97       	sbiw	r24, 0x00	; 0
     aea:	a9 f0       	breq	.+42     	; 0xb16 <TIMER_vidCOM+0x6e>
     aec:	2a 89       	ldd	r18, Y+18	; 0x12
     aee:	3b 89       	ldd	r19, Y+19	; 0x13
     af0:	21 30       	cpi	r18, 0x01	; 1
     af2:	31 05       	cpc	r19, r1
     af4:	09 f0       	breq	.+2      	; 0xaf8 <TIMER_vidCOM+0x50>
     af6:	de c1       	rjmp	.+956    	; 0xeb4 <TIMER_vidCOM+0x40c>
			{
			case SET_TOP:
				TCCR0&=CLR_MASK_COM;
     af8:	a3 e5       	ldi	r26, 0x53	; 83
     afa:	b0 e0       	ldi	r27, 0x00	; 0
     afc:	e3 e5       	ldi	r30, 0x53	; 83
     afe:	f0 e0       	ldi	r31, 0x00	; 0
     b00:	80 81       	ld	r24, Z
     b02:	8f 7c       	andi	r24, 0xCF	; 207
     b04:	8c 93       	st	X, r24
				TCCR0|=T0_SET_TOP_VAL;
     b06:	a3 e5       	ldi	r26, 0x53	; 83
     b08:	b0 e0       	ldi	r27, 0x00	; 0
     b0a:	e3 e5       	ldi	r30, 0x53	; 83
     b0c:	f0 e0       	ldi	r31, 0x00	; 0
     b0e:	80 81       	ld	r24, Z
     b10:	80 62       	ori	r24, 0x20	; 32
     b12:	8c 93       	st	X, r24
     b14:	cf c1       	rjmp	.+926    	; 0xeb4 <TIMER_vidCOM+0x40c>
				break;
			case CLR_TOP:
				TCCR0&=CLR_MASK_COM;
     b16:	a3 e5       	ldi	r26, 0x53	; 83
     b18:	b0 e0       	ldi	r27, 0x00	; 0
     b1a:	e3 e5       	ldi	r30, 0x53	; 83
     b1c:	f0 e0       	ldi	r31, 0x00	; 0
     b1e:	80 81       	ld	r24, Z
     b20:	8f 7c       	andi	r24, 0xCF	; 207
     b22:	8c 93       	st	X, r24
				TCCR0|=T0_CLR_TOP_VAL;
     b24:	a3 e5       	ldi	r26, 0x53	; 83
     b26:	b0 e0       	ldi	r27, 0x00	; 0
     b28:	e3 e5       	ldi	r30, 0x53	; 83
     b2a:	f0 e0       	ldi	r31, 0x00	; 0
     b2c:	80 81       	ld	r24, Z
     b2e:	80 63       	ori	r24, 0x30	; 48
     b30:	8c 93       	st	X, r24
     b32:	c0 c1       	rjmp	.+896    	; 0xeb4 <TIMER_vidCOM+0x40c>
				break;
			}
		}
		else if(Copy_u8TimerMode==T0_PCORRECT_PWM)
     b34:	8a 81       	ldd	r24, Y+2	; 0x02
     b36:	83 30       	cpi	r24, 0x03	; 3
     b38:	09 f0       	breq	.+2      	; 0xb3c <TIMER_vidCOM+0x94>
     b3a:	bc c1       	rjmp	.+888    	; 0xeb4 <TIMER_vidCOM+0x40c>
		{
			DIO_U8_SetPinDir(PORT_B,PIN_3,HIGH);
     b3c:	81 e0       	ldi	r24, 0x01	; 1
     b3e:	63 e0       	ldi	r22, 0x03	; 3
     b40:	41 e0       	ldi	r20, 0x01	; 1
     b42:	0e 94 18 01 	call	0x230	; 0x230 <DIO_U8_SetPinDir>
			switch(Copy_u8COMMode)
     b46:	8b 81       	ldd	r24, Y+3	; 0x03
     b48:	28 2f       	mov	r18, r24
     b4a:	30 e0       	ldi	r19, 0x00	; 0
     b4c:	39 8b       	std	Y+17, r19	; 0x11
     b4e:	28 8b       	std	Y+16, r18	; 0x10
     b50:	88 89       	ldd	r24, Y+16	; 0x10
     b52:	99 89       	ldd	r25, Y+17	; 0x11
     b54:	00 97       	sbiw	r24, 0x00	; 0
     b56:	a9 f0       	breq	.+42     	; 0xb82 <TIMER_vidCOM+0xda>
     b58:	28 89       	ldd	r18, Y+16	; 0x10
     b5a:	39 89       	ldd	r19, Y+17	; 0x11
     b5c:	21 30       	cpi	r18, 0x01	; 1
     b5e:	31 05       	cpc	r19, r1
     b60:	09 f0       	breq	.+2      	; 0xb64 <TIMER_vidCOM+0xbc>
     b62:	a8 c1       	rjmp	.+848    	; 0xeb4 <TIMER_vidCOM+0x40c>
			{
			case INVERTING:
				TCCR0&=CLR_MASK_COM;
     b64:	a3 e5       	ldi	r26, 0x53	; 83
     b66:	b0 e0       	ldi	r27, 0x00	; 0
     b68:	e3 e5       	ldi	r30, 0x53	; 83
     b6a:	f0 e0       	ldi	r31, 0x00	; 0
     b6c:	80 81       	ld	r24, Z
     b6e:	8f 7c       	andi	r24, 0xCF	; 207
     b70:	8c 93       	st	X, r24
				TCCR0|=T0_INVERTING_VAL;
     b72:	a3 e5       	ldi	r26, 0x53	; 83
     b74:	b0 e0       	ldi	r27, 0x00	; 0
     b76:	e3 e5       	ldi	r30, 0x53	; 83
     b78:	f0 e0       	ldi	r31, 0x00	; 0
     b7a:	80 81       	ld	r24, Z
     b7c:	80 63       	ori	r24, 0x30	; 48
     b7e:	8c 93       	st	X, r24
     b80:	99 c1       	rjmp	.+818    	; 0xeb4 <TIMER_vidCOM+0x40c>
				break;
			case NON_INVERTING:
				TCCR0&=CLR_MASK_COM;
     b82:	a3 e5       	ldi	r26, 0x53	; 83
     b84:	b0 e0       	ldi	r27, 0x00	; 0
     b86:	e3 e5       	ldi	r30, 0x53	; 83
     b88:	f0 e0       	ldi	r31, 0x00	; 0
     b8a:	80 81       	ld	r24, Z
     b8c:	8f 7c       	andi	r24, 0xCF	; 207
     b8e:	8c 93       	st	X, r24
				TCCR0|=T0_NON_INVERTING_VAL;
     b90:	a3 e5       	ldi	r26, 0x53	; 83
     b92:	b0 e0       	ldi	r27, 0x00	; 0
     b94:	e3 e5       	ldi	r30, 0x53	; 83
     b96:	f0 e0       	ldi	r31, 0x00	; 0
     b98:	80 81       	ld	r24, Z
     b9a:	80 62       	ori	r24, 0x20	; 32
     b9c:	8c 93       	st	X, r24
     b9e:	8a c1       	rjmp	.+788    	; 0xeb4 <TIMER_vidCOM+0x40c>
				break;
			}
		}
	}
	else if(Copy_u8Timertype==TIMER_1_CHA)
     ba0:	89 81       	ldd	r24, Y+1	; 0x01
     ba2:	83 30       	cpi	r24, 0x03	; 3
     ba4:	09 f0       	breq	.+2      	; 0xba8 <TIMER_vidCOM+0x100>
     ba6:	8b c0       	rjmp	.+278    	; 0xcbe <TIMER_vidCOM+0x216>
	{
		DIO_U8_SetPinDir(PORT_D,PIN_5,HIGH);
     ba8:	83 e0       	ldi	r24, 0x03	; 3
     baa:	65 e0       	ldi	r22, 0x05	; 5
     bac:	41 e0       	ldi	r20, 0x01	; 1
     bae:	0e 94 18 01 	call	0x230	; 0x230 <DIO_U8_SetPinDir>
		if((Copy_u8TimerMode==T1_FAST_PWM_OCRA)||(Copy_u8TimerMode==T1_FAST_PWM_8bit)||(Copy_u8TimerMode==T1_FAST_PWM_9bit)||(Copy_u8TimerMode==T1_FAST_PWM_10bit)||(Copy_u8TimerMode==T1_FAST_PWM_ICR))
     bb2:	8a 81       	ldd	r24, Y+2	; 0x02
     bb4:	8f 30       	cpi	r24, 0x0F	; 15
     bb6:	61 f0       	breq	.+24     	; 0xbd0 <TIMER_vidCOM+0x128>
     bb8:	8a 81       	ldd	r24, Y+2	; 0x02
     bba:	85 30       	cpi	r24, 0x05	; 5
     bbc:	49 f0       	breq	.+18     	; 0xbd0 <TIMER_vidCOM+0x128>
     bbe:	8a 81       	ldd	r24, Y+2	; 0x02
     bc0:	86 30       	cpi	r24, 0x06	; 6
     bc2:	31 f0       	breq	.+12     	; 0xbd0 <TIMER_vidCOM+0x128>
     bc4:	8a 81       	ldd	r24, Y+2	; 0x02
     bc6:	87 30       	cpi	r24, 0x07	; 7
     bc8:	19 f0       	breq	.+6      	; 0xbd0 <TIMER_vidCOM+0x128>
     bca:	8a 81       	ldd	r24, Y+2	; 0x02
     bcc:	8e 30       	cpi	r24, 0x0E	; 14
     bce:	71 f5       	brne	.+92     	; 0xc2c <TIMER_vidCOM+0x184>
			{
				switch(Copy_u8COMMode)
     bd0:	8b 81       	ldd	r24, Y+3	; 0x03
     bd2:	28 2f       	mov	r18, r24
     bd4:	30 e0       	ldi	r19, 0x00	; 0
     bd6:	3f 87       	std	Y+15, r19	; 0x0f
     bd8:	2e 87       	std	Y+14, r18	; 0x0e
     bda:	8e 85       	ldd	r24, Y+14	; 0x0e
     bdc:	9f 85       	ldd	r25, Y+15	; 0x0f
     bde:	81 30       	cpi	r24, 0x01	; 1
     be0:	91 05       	cpc	r25, r1
     be2:	31 f0       	breq	.+12     	; 0xbf0 <TIMER_vidCOM+0x148>
     be4:	2e 85       	ldd	r18, Y+14	; 0x0e
     be6:	3f 85       	ldd	r19, Y+15	; 0x0f
     be8:	22 30       	cpi	r18, 0x02	; 2
     bea:	31 05       	cpc	r19, r1
     bec:	81 f0       	breq	.+32     	; 0xc0e <TIMER_vidCOM+0x166>
     bee:	62 c1       	rjmp	.+708    	; 0xeb4 <TIMER_vidCOM+0x40c>
				{
				case T1_SET_TOP_ChannelA:
					TCCR1A&=CLR_MASK_COM_T1_CHA;
     bf0:	af e4       	ldi	r26, 0x4F	; 79
     bf2:	b0 e0       	ldi	r27, 0x00	; 0
     bf4:	ef e4       	ldi	r30, 0x4F	; 79
     bf6:	f0 e0       	ldi	r31, 0x00	; 0
     bf8:	80 81       	ld	r24, Z
     bfa:	8f 73       	andi	r24, 0x3F	; 63
     bfc:	8c 93       	st	X, r24
					TCCR1A|=128;
     bfe:	af e4       	ldi	r26, 0x4F	; 79
     c00:	b0 e0       	ldi	r27, 0x00	; 0
     c02:	ef e4       	ldi	r30, 0x4F	; 79
     c04:	f0 e0       	ldi	r31, 0x00	; 0
     c06:	80 81       	ld	r24, Z
     c08:	80 68       	ori	r24, 0x80	; 128
     c0a:	8c 93       	st	X, r24
     c0c:	53 c1       	rjmp	.+678    	; 0xeb4 <TIMER_vidCOM+0x40c>
					break;
				case T1_CLR_TOP_ChannelA:
					TCCR1A&=CLR_MASK_COM_T1_CHA;
     c0e:	af e4       	ldi	r26, 0x4F	; 79
     c10:	b0 e0       	ldi	r27, 0x00	; 0
     c12:	ef e4       	ldi	r30, 0x4F	; 79
     c14:	f0 e0       	ldi	r31, 0x00	; 0
     c16:	80 81       	ld	r24, Z
     c18:	8f 73       	andi	r24, 0x3F	; 63
     c1a:	8c 93       	st	X, r24
					TCCR1A|=192;
     c1c:	af e4       	ldi	r26, 0x4F	; 79
     c1e:	b0 e0       	ldi	r27, 0x00	; 0
     c20:	ef e4       	ldi	r30, 0x4F	; 79
     c22:	f0 e0       	ldi	r31, 0x00	; 0
     c24:	80 81       	ld	r24, Z
     c26:	80 6c       	ori	r24, 0xC0	; 192
     c28:	8c 93       	st	X, r24
     c2a:	44 c1       	rjmp	.+648    	; 0xeb4 <TIMER_vidCOM+0x40c>
					break;
				}
			}
			else if((Copy_u8TimerMode==T1_PCORRECT_PWM_TOP_OCRA)||(Copy_u8TimerMode==T1_PCORRECT_PWM_TOP_ICR)||(Copy_u8TimerMode==T1_PCORRECT_PWM_8bit)||(Copy_u8TimerMode==T1_PCORRECT_PWM_9bit)||(Copy_u8TimerMode==T1_PCORRECT_PWM_10bit)||(Copy_u8TimerMode==T1_PFCORRECT_PWM_TOP_ICR)||(Copy_u8TimerMode==T1_PFCORRECT_PWM_TOP_OCRA))
     c2c:	8a 81       	ldd	r24, Y+2	; 0x02
     c2e:	8b 30       	cpi	r24, 0x0B	; 11
     c30:	99 f0       	breq	.+38     	; 0xc58 <TIMER_vidCOM+0x1b0>
     c32:	8a 81       	ldd	r24, Y+2	; 0x02
     c34:	8a 30       	cpi	r24, 0x0A	; 10
     c36:	81 f0       	breq	.+32     	; 0xc58 <TIMER_vidCOM+0x1b0>
     c38:	8a 81       	ldd	r24, Y+2	; 0x02
     c3a:	81 30       	cpi	r24, 0x01	; 1
     c3c:	69 f0       	breq	.+26     	; 0xc58 <TIMER_vidCOM+0x1b0>
     c3e:	8a 81       	ldd	r24, Y+2	; 0x02
     c40:	82 30       	cpi	r24, 0x02	; 2
     c42:	51 f0       	breq	.+20     	; 0xc58 <TIMER_vidCOM+0x1b0>
     c44:	8a 81       	ldd	r24, Y+2	; 0x02
     c46:	83 30       	cpi	r24, 0x03	; 3
     c48:	39 f0       	breq	.+14     	; 0xc58 <TIMER_vidCOM+0x1b0>
     c4a:	8a 81       	ldd	r24, Y+2	; 0x02
     c4c:	88 30       	cpi	r24, 0x08	; 8
     c4e:	21 f0       	breq	.+8      	; 0xc58 <TIMER_vidCOM+0x1b0>
     c50:	8a 81       	ldd	r24, Y+2	; 0x02
     c52:	89 30       	cpi	r24, 0x09	; 9
     c54:	09 f0       	breq	.+2      	; 0xc58 <TIMER_vidCOM+0x1b0>
     c56:	2e c1       	rjmp	.+604    	; 0xeb4 <TIMER_vidCOM+0x40c>
			{
				DIO_U8_SetPinDir(PORT_B,PIN_3,HIGH);
     c58:	81 e0       	ldi	r24, 0x01	; 1
     c5a:	63 e0       	ldi	r22, 0x03	; 3
     c5c:	41 e0       	ldi	r20, 0x01	; 1
     c5e:	0e 94 18 01 	call	0x230	; 0x230 <DIO_U8_SetPinDir>
				switch(Copy_u8COMMode)
     c62:	8b 81       	ldd	r24, Y+3	; 0x03
     c64:	28 2f       	mov	r18, r24
     c66:	30 e0       	ldi	r19, 0x00	; 0
     c68:	3d 87       	std	Y+13, r19	; 0x0d
     c6a:	2c 87       	std	Y+12, r18	; 0x0c
     c6c:	8c 85       	ldd	r24, Y+12	; 0x0c
     c6e:	9d 85       	ldd	r25, Y+13	; 0x0d
     c70:	81 30       	cpi	r24, 0x01	; 1
     c72:	91 05       	cpc	r25, r1
     c74:	31 f0       	breq	.+12     	; 0xc82 <TIMER_vidCOM+0x1da>
     c76:	2c 85       	ldd	r18, Y+12	; 0x0c
     c78:	3d 85       	ldd	r19, Y+13	; 0x0d
     c7a:	22 30       	cpi	r18, 0x02	; 2
     c7c:	31 05       	cpc	r19, r1
     c7e:	81 f0       	breq	.+32     	; 0xca0 <TIMER_vidCOM+0x1f8>
     c80:	19 c1       	rjmp	.+562    	; 0xeb4 <TIMER_vidCOM+0x40c>
				{
				case T1_INVERTING_ChannelA:
					TCCR1A&=CLR_MASK_COM_T1_CHA;
     c82:	af e4       	ldi	r26, 0x4F	; 79
     c84:	b0 e0       	ldi	r27, 0x00	; 0
     c86:	ef e4       	ldi	r30, 0x4F	; 79
     c88:	f0 e0       	ldi	r31, 0x00	; 0
     c8a:	80 81       	ld	r24, Z
     c8c:	8f 73       	andi	r24, 0x3F	; 63
     c8e:	8c 93       	st	X, r24
					TCCR1A|=192;
     c90:	af e4       	ldi	r26, 0x4F	; 79
     c92:	b0 e0       	ldi	r27, 0x00	; 0
     c94:	ef e4       	ldi	r30, 0x4F	; 79
     c96:	f0 e0       	ldi	r31, 0x00	; 0
     c98:	80 81       	ld	r24, Z
     c9a:	80 6c       	ori	r24, 0xC0	; 192
     c9c:	8c 93       	st	X, r24
     c9e:	0a c1       	rjmp	.+532    	; 0xeb4 <TIMER_vidCOM+0x40c>
					break;
				case T1_NON_INVERTING_ChannelA:
					TCCR1A&=CLR_MASK_COM_T1_CHA;
     ca0:	af e4       	ldi	r26, 0x4F	; 79
     ca2:	b0 e0       	ldi	r27, 0x00	; 0
     ca4:	ef e4       	ldi	r30, 0x4F	; 79
     ca6:	f0 e0       	ldi	r31, 0x00	; 0
     ca8:	80 81       	ld	r24, Z
     caa:	8f 73       	andi	r24, 0x3F	; 63
     cac:	8c 93       	st	X, r24
					TCCR1A|=128;
     cae:	af e4       	ldi	r26, 0x4F	; 79
     cb0:	b0 e0       	ldi	r27, 0x00	; 0
     cb2:	ef e4       	ldi	r30, 0x4F	; 79
     cb4:	f0 e0       	ldi	r31, 0x00	; 0
     cb6:	80 81       	ld	r24, Z
     cb8:	80 68       	ori	r24, 0x80	; 128
     cba:	8c 93       	st	X, r24
     cbc:	fb c0       	rjmp	.+502    	; 0xeb4 <TIMER_vidCOM+0x40c>
					break;
				}
			}
	}
	else if(Copy_u8Timertype==TIMER_1_CHB)
     cbe:	89 81       	ldd	r24, Y+1	; 0x01
     cc0:	84 30       	cpi	r24, 0x04	; 4
     cc2:	09 f0       	breq	.+2      	; 0xcc6 <TIMER_vidCOM+0x21e>
     cc4:	8b c0       	rjmp	.+278    	; 0xddc <TIMER_vidCOM+0x334>
	{
		DIO_U8_SetPinDir(PORT_D,PIN_4,HIGH);
     cc6:	83 e0       	ldi	r24, 0x03	; 3
     cc8:	64 e0       	ldi	r22, 0x04	; 4
     cca:	41 e0       	ldi	r20, 0x01	; 1
     ccc:	0e 94 18 01 	call	0x230	; 0x230 <DIO_U8_SetPinDir>
		if((Copy_u8TimerMode==T1_FAST_PWM_OCRA)||(Copy_u8TimerMode==T1_FAST_PWM_8bit)||(Copy_u8TimerMode==T1_FAST_PWM_9bit)||(Copy_u8TimerMode==T1_FAST_PWM_10bit)||(Copy_u8TimerMode==T1_FAST_PWM_ICR))
     cd0:	8a 81       	ldd	r24, Y+2	; 0x02
     cd2:	8f 30       	cpi	r24, 0x0F	; 15
     cd4:	61 f0       	breq	.+24     	; 0xcee <TIMER_vidCOM+0x246>
     cd6:	8a 81       	ldd	r24, Y+2	; 0x02
     cd8:	85 30       	cpi	r24, 0x05	; 5
     cda:	49 f0       	breq	.+18     	; 0xcee <TIMER_vidCOM+0x246>
     cdc:	8a 81       	ldd	r24, Y+2	; 0x02
     cde:	86 30       	cpi	r24, 0x06	; 6
     ce0:	31 f0       	breq	.+12     	; 0xcee <TIMER_vidCOM+0x246>
     ce2:	8a 81       	ldd	r24, Y+2	; 0x02
     ce4:	87 30       	cpi	r24, 0x07	; 7
     ce6:	19 f0       	breq	.+6      	; 0xcee <TIMER_vidCOM+0x246>
     ce8:	8a 81       	ldd	r24, Y+2	; 0x02
     cea:	8e 30       	cpi	r24, 0x0E	; 14
     cec:	71 f5       	brne	.+92     	; 0xd4a <TIMER_vidCOM+0x2a2>
			{
				switch(Copy_u8COMMode)
     cee:	8b 81       	ldd	r24, Y+3	; 0x03
     cf0:	28 2f       	mov	r18, r24
     cf2:	30 e0       	ldi	r19, 0x00	; 0
     cf4:	3b 87       	std	Y+11, r19	; 0x0b
     cf6:	2a 87       	std	Y+10, r18	; 0x0a
     cf8:	8a 85       	ldd	r24, Y+10	; 0x0a
     cfa:	9b 85       	ldd	r25, Y+11	; 0x0b
     cfc:	8b 30       	cpi	r24, 0x0B	; 11
     cfe:	91 05       	cpc	r25, r1
     d00:	31 f0       	breq	.+12     	; 0xd0e <TIMER_vidCOM+0x266>
     d02:	2a 85       	ldd	r18, Y+10	; 0x0a
     d04:	3b 85       	ldd	r19, Y+11	; 0x0b
     d06:	26 31       	cpi	r18, 0x16	; 22
     d08:	31 05       	cpc	r19, r1
     d0a:	81 f0       	breq	.+32     	; 0xd2c <TIMER_vidCOM+0x284>
     d0c:	d3 c0       	rjmp	.+422    	; 0xeb4 <TIMER_vidCOM+0x40c>
				{
				case T1_SET_TOP_ChannelB:
					TCCR1B&=CLR_MASK_COM_T1_CHB;
     d0e:	ae e4       	ldi	r26, 0x4E	; 78
     d10:	b0 e0       	ldi	r27, 0x00	; 0
     d12:	ee e4       	ldi	r30, 0x4E	; 78
     d14:	f0 e0       	ldi	r31, 0x00	; 0
     d16:	80 81       	ld	r24, Z
     d18:	8f 7c       	andi	r24, 0xCF	; 207
     d1a:	8c 93       	st	X, r24
					TCCR1B|=32;
     d1c:	ae e4       	ldi	r26, 0x4E	; 78
     d1e:	b0 e0       	ldi	r27, 0x00	; 0
     d20:	ee e4       	ldi	r30, 0x4E	; 78
     d22:	f0 e0       	ldi	r31, 0x00	; 0
     d24:	80 81       	ld	r24, Z
     d26:	80 62       	ori	r24, 0x20	; 32
     d28:	8c 93       	st	X, r24
     d2a:	c4 c0       	rjmp	.+392    	; 0xeb4 <TIMER_vidCOM+0x40c>
					break;
				case T1_CLR_TOP_ChannelB:
					TCCR1B&=CLR_MASK_COM_T1_CHB;
     d2c:	ae e4       	ldi	r26, 0x4E	; 78
     d2e:	b0 e0       	ldi	r27, 0x00	; 0
     d30:	ee e4       	ldi	r30, 0x4E	; 78
     d32:	f0 e0       	ldi	r31, 0x00	; 0
     d34:	80 81       	ld	r24, Z
     d36:	8f 7c       	andi	r24, 0xCF	; 207
     d38:	8c 93       	st	X, r24
					TCCR1B|=48;
     d3a:	ae e4       	ldi	r26, 0x4E	; 78
     d3c:	b0 e0       	ldi	r27, 0x00	; 0
     d3e:	ee e4       	ldi	r30, 0x4E	; 78
     d40:	f0 e0       	ldi	r31, 0x00	; 0
     d42:	80 81       	ld	r24, Z
     d44:	80 63       	ori	r24, 0x30	; 48
     d46:	8c 93       	st	X, r24
     d48:	b5 c0       	rjmp	.+362    	; 0xeb4 <TIMER_vidCOM+0x40c>
					break;
				}
			}
			else if((Copy_u8TimerMode==T1_PCORRECT_PWM_TOP_OCRA)||(Copy_u8TimerMode==T1_PCORRECT_PWM_TOP_ICR)||(Copy_u8TimerMode==T1_PCORRECT_PWM_8bit)||(Copy_u8TimerMode==T1_PCORRECT_PWM_9bit)||(Copy_u8TimerMode==T1_PCORRECT_PWM_10bit)||(Copy_u8TimerMode==T1_PFCORRECT_PWM_TOP_ICR)||(Copy_u8TimerMode==T1_PFCORRECT_PWM_TOP_OCRA))
     d4a:	8a 81       	ldd	r24, Y+2	; 0x02
     d4c:	8b 30       	cpi	r24, 0x0B	; 11
     d4e:	99 f0       	breq	.+38     	; 0xd76 <TIMER_vidCOM+0x2ce>
     d50:	8a 81       	ldd	r24, Y+2	; 0x02
     d52:	8a 30       	cpi	r24, 0x0A	; 10
     d54:	81 f0       	breq	.+32     	; 0xd76 <TIMER_vidCOM+0x2ce>
     d56:	8a 81       	ldd	r24, Y+2	; 0x02
     d58:	81 30       	cpi	r24, 0x01	; 1
     d5a:	69 f0       	breq	.+26     	; 0xd76 <TIMER_vidCOM+0x2ce>
     d5c:	8a 81       	ldd	r24, Y+2	; 0x02
     d5e:	82 30       	cpi	r24, 0x02	; 2
     d60:	51 f0       	breq	.+20     	; 0xd76 <TIMER_vidCOM+0x2ce>
     d62:	8a 81       	ldd	r24, Y+2	; 0x02
     d64:	83 30       	cpi	r24, 0x03	; 3
     d66:	39 f0       	breq	.+14     	; 0xd76 <TIMER_vidCOM+0x2ce>
     d68:	8a 81       	ldd	r24, Y+2	; 0x02
     d6a:	88 30       	cpi	r24, 0x08	; 8
     d6c:	21 f0       	breq	.+8      	; 0xd76 <TIMER_vidCOM+0x2ce>
     d6e:	8a 81       	ldd	r24, Y+2	; 0x02
     d70:	89 30       	cpi	r24, 0x09	; 9
     d72:	09 f0       	breq	.+2      	; 0xd76 <TIMER_vidCOM+0x2ce>
     d74:	9f c0       	rjmp	.+318    	; 0xeb4 <TIMER_vidCOM+0x40c>
			{
				DIO_U8_SetPinDir(PORT_B,PIN_3,HIGH);
     d76:	81 e0       	ldi	r24, 0x01	; 1
     d78:	63 e0       	ldi	r22, 0x03	; 3
     d7a:	41 e0       	ldi	r20, 0x01	; 1
     d7c:	0e 94 18 01 	call	0x230	; 0x230 <DIO_U8_SetPinDir>
				switch(Copy_u8COMMode)
     d80:	8b 81       	ldd	r24, Y+3	; 0x03
     d82:	28 2f       	mov	r18, r24
     d84:	30 e0       	ldi	r19, 0x00	; 0
     d86:	39 87       	std	Y+9, r19	; 0x09
     d88:	28 87       	std	Y+8, r18	; 0x08
     d8a:	88 85       	ldd	r24, Y+8	; 0x08
     d8c:	99 85       	ldd	r25, Y+9	; 0x09
     d8e:	8b 30       	cpi	r24, 0x0B	; 11
     d90:	91 05       	cpc	r25, r1
     d92:	31 f0       	breq	.+12     	; 0xda0 <TIMER_vidCOM+0x2f8>
     d94:	28 85       	ldd	r18, Y+8	; 0x08
     d96:	39 85       	ldd	r19, Y+9	; 0x09
     d98:	26 31       	cpi	r18, 0x16	; 22
     d9a:	31 05       	cpc	r19, r1
     d9c:	81 f0       	breq	.+32     	; 0xdbe <TIMER_vidCOM+0x316>
     d9e:	8a c0       	rjmp	.+276    	; 0xeb4 <TIMER_vidCOM+0x40c>
				{
				case T1_INVERTING_ChannelB:
					TCCR1B&=CLR_MASK_COM_T1_CHB;
     da0:	ae e4       	ldi	r26, 0x4E	; 78
     da2:	b0 e0       	ldi	r27, 0x00	; 0
     da4:	ee e4       	ldi	r30, 0x4E	; 78
     da6:	f0 e0       	ldi	r31, 0x00	; 0
     da8:	80 81       	ld	r24, Z
     daa:	8f 7c       	andi	r24, 0xCF	; 207
     dac:	8c 93       	st	X, r24
					TCCR1B|=48;
     dae:	ae e4       	ldi	r26, 0x4E	; 78
     db0:	b0 e0       	ldi	r27, 0x00	; 0
     db2:	ee e4       	ldi	r30, 0x4E	; 78
     db4:	f0 e0       	ldi	r31, 0x00	; 0
     db6:	80 81       	ld	r24, Z
     db8:	80 63       	ori	r24, 0x30	; 48
     dba:	8c 93       	st	X, r24
     dbc:	7b c0       	rjmp	.+246    	; 0xeb4 <TIMER_vidCOM+0x40c>
					break;
				case T1_NON_INVERTING_ChannelB:
					TCCR1B&=CLR_MASK_COM_T1_CHB;
     dbe:	ae e4       	ldi	r26, 0x4E	; 78
     dc0:	b0 e0       	ldi	r27, 0x00	; 0
     dc2:	ee e4       	ldi	r30, 0x4E	; 78
     dc4:	f0 e0       	ldi	r31, 0x00	; 0
     dc6:	80 81       	ld	r24, Z
     dc8:	8f 7c       	andi	r24, 0xCF	; 207
     dca:	8c 93       	st	X, r24
					TCCR1B|=32;
     dcc:	ae e4       	ldi	r26, 0x4E	; 78
     dce:	b0 e0       	ldi	r27, 0x00	; 0
     dd0:	ee e4       	ldi	r30, 0x4E	; 78
     dd2:	f0 e0       	ldi	r31, 0x00	; 0
     dd4:	80 81       	ld	r24, Z
     dd6:	80 62       	ori	r24, 0x20	; 32
     dd8:	8c 93       	st	X, r24
     dda:	6c c0       	rjmp	.+216    	; 0xeb4 <TIMER_vidCOM+0x40c>
					break;
				}
			}
	}
	else if(Copy_u8Timertype==TIMER_2)
     ddc:	89 81       	ldd	r24, Y+1	; 0x01
     dde:	82 30       	cpi	r24, 0x02	; 2
     de0:	09 f0       	breq	.+2      	; 0xde4 <TIMER_vidCOM+0x33c>
     de2:	68 c0       	rjmp	.+208    	; 0xeb4 <TIMER_vidCOM+0x40c>
	{
		if(Copy_u8TimerMode==T2_FAST_PWM)
     de4:	8a 81       	ldd	r24, Y+2	; 0x02
     de6:	82 30       	cpi	r24, 0x02	; 2
     de8:	91 f5       	brne	.+100    	; 0xe4e <TIMER_vidCOM+0x3a6>
		{
			DIO_U8_SetPinDir(PORT_D,PIN_7,HIGH);
     dea:	83 e0       	ldi	r24, 0x03	; 3
     dec:	67 e0       	ldi	r22, 0x07	; 7
     dee:	41 e0       	ldi	r20, 0x01	; 1
     df0:	0e 94 18 01 	call	0x230	; 0x230 <DIO_U8_SetPinDir>
			switch(Copy_u8COMMode)
     df4:	8b 81       	ldd	r24, Y+3	; 0x03
     df6:	28 2f       	mov	r18, r24
     df8:	30 e0       	ldi	r19, 0x00	; 0
     dfa:	3f 83       	std	Y+7, r19	; 0x07
     dfc:	2e 83       	std	Y+6, r18	; 0x06
     dfe:	8e 81       	ldd	r24, Y+6	; 0x06
     e00:	9f 81       	ldd	r25, Y+7	; 0x07
     e02:	00 97       	sbiw	r24, 0x00	; 0
     e04:	a9 f0       	breq	.+42     	; 0xe30 <TIMER_vidCOM+0x388>
     e06:	2e 81       	ldd	r18, Y+6	; 0x06
     e08:	3f 81       	ldd	r19, Y+7	; 0x07
     e0a:	21 30       	cpi	r18, 0x01	; 1
     e0c:	31 05       	cpc	r19, r1
     e0e:	09 f0       	breq	.+2      	; 0xe12 <TIMER_vidCOM+0x36a>
     e10:	51 c0       	rjmp	.+162    	; 0xeb4 <TIMER_vidCOM+0x40c>
			{
			case SET_TOP:
				TCCR2&=CLR_MASK_COM;
     e12:	a5 e4       	ldi	r26, 0x45	; 69
     e14:	b0 e0       	ldi	r27, 0x00	; 0
     e16:	e5 e4       	ldi	r30, 0x45	; 69
     e18:	f0 e0       	ldi	r31, 0x00	; 0
     e1a:	80 81       	ld	r24, Z
     e1c:	8f 7c       	andi	r24, 0xCF	; 207
     e1e:	8c 93       	st	X, r24
				TCCR2|=T2_SET_TOP_VAL;
     e20:	a5 e4       	ldi	r26, 0x45	; 69
     e22:	b0 e0       	ldi	r27, 0x00	; 0
     e24:	e5 e4       	ldi	r30, 0x45	; 69
     e26:	f0 e0       	ldi	r31, 0x00	; 0
     e28:	80 81       	ld	r24, Z
     e2a:	80 62       	ori	r24, 0x20	; 32
     e2c:	8c 93       	st	X, r24
     e2e:	42 c0       	rjmp	.+132    	; 0xeb4 <TIMER_vidCOM+0x40c>
				break;
			case CLR_TOP:
				TCCR2&=CLR_MASK_COM;
     e30:	a5 e4       	ldi	r26, 0x45	; 69
     e32:	b0 e0       	ldi	r27, 0x00	; 0
     e34:	e5 e4       	ldi	r30, 0x45	; 69
     e36:	f0 e0       	ldi	r31, 0x00	; 0
     e38:	80 81       	ld	r24, Z
     e3a:	8f 7c       	andi	r24, 0xCF	; 207
     e3c:	8c 93       	st	X, r24
				TCCR2|=T2_CLR_TOP_VAL;
     e3e:	a5 e4       	ldi	r26, 0x45	; 69
     e40:	b0 e0       	ldi	r27, 0x00	; 0
     e42:	e5 e4       	ldi	r30, 0x45	; 69
     e44:	f0 e0       	ldi	r31, 0x00	; 0
     e46:	80 81       	ld	r24, Z
     e48:	80 63       	ori	r24, 0x30	; 48
     e4a:	8c 93       	st	X, r24
     e4c:	33 c0       	rjmp	.+102    	; 0xeb4 <TIMER_vidCOM+0x40c>
				break;
			}
		}
		else if(Copy_u8TimerMode==T2_PCORRECT_PWM)
     e4e:	8a 81       	ldd	r24, Y+2	; 0x02
     e50:	83 30       	cpi	r24, 0x03	; 3
     e52:	81 f5       	brne	.+96     	; 0xeb4 <TIMER_vidCOM+0x40c>
		{
			DIO_U8_SetPinDir(PORT_D,PIN_7,HIGH);
     e54:	83 e0       	ldi	r24, 0x03	; 3
     e56:	67 e0       	ldi	r22, 0x07	; 7
     e58:	41 e0       	ldi	r20, 0x01	; 1
     e5a:	0e 94 18 01 	call	0x230	; 0x230 <DIO_U8_SetPinDir>
			switch(Copy_u8COMMode)
     e5e:	8b 81       	ldd	r24, Y+3	; 0x03
     e60:	28 2f       	mov	r18, r24
     e62:	30 e0       	ldi	r19, 0x00	; 0
     e64:	3d 83       	std	Y+5, r19	; 0x05
     e66:	2c 83       	std	Y+4, r18	; 0x04
     e68:	8c 81       	ldd	r24, Y+4	; 0x04
     e6a:	9d 81       	ldd	r25, Y+5	; 0x05
     e6c:	00 97       	sbiw	r24, 0x00	; 0
     e6e:	a1 f0       	breq	.+40     	; 0xe98 <TIMER_vidCOM+0x3f0>
     e70:	2c 81       	ldd	r18, Y+4	; 0x04
     e72:	3d 81       	ldd	r19, Y+5	; 0x05
     e74:	21 30       	cpi	r18, 0x01	; 1
     e76:	31 05       	cpc	r19, r1
     e78:	e9 f4       	brne	.+58     	; 0xeb4 <TIMER_vidCOM+0x40c>
			{
			case INVERTING:
				TCCR2&=CLR_MASK_COM;
     e7a:	a5 e4       	ldi	r26, 0x45	; 69
     e7c:	b0 e0       	ldi	r27, 0x00	; 0
     e7e:	e5 e4       	ldi	r30, 0x45	; 69
     e80:	f0 e0       	ldi	r31, 0x00	; 0
     e82:	80 81       	ld	r24, Z
     e84:	8f 7c       	andi	r24, 0xCF	; 207
     e86:	8c 93       	st	X, r24
				TCCR2|=T2_INVERTING_VAL;
     e88:	a5 e4       	ldi	r26, 0x45	; 69
     e8a:	b0 e0       	ldi	r27, 0x00	; 0
     e8c:	e5 e4       	ldi	r30, 0x45	; 69
     e8e:	f0 e0       	ldi	r31, 0x00	; 0
     e90:	80 81       	ld	r24, Z
     e92:	80 63       	ori	r24, 0x30	; 48
     e94:	8c 93       	st	X, r24
     e96:	0e c0       	rjmp	.+28     	; 0xeb4 <TIMER_vidCOM+0x40c>
				break;
			case NON_INVERTING:
				TCCR2&=CLR_MASK_COM;
     e98:	a5 e4       	ldi	r26, 0x45	; 69
     e9a:	b0 e0       	ldi	r27, 0x00	; 0
     e9c:	e5 e4       	ldi	r30, 0x45	; 69
     e9e:	f0 e0       	ldi	r31, 0x00	; 0
     ea0:	80 81       	ld	r24, Z
     ea2:	8f 7c       	andi	r24, 0xCF	; 207
     ea4:	8c 93       	st	X, r24
				TCCR2|=T2_NON_INVERTING_VAL;
     ea6:	a5 e4       	ldi	r26, 0x45	; 69
     ea8:	b0 e0       	ldi	r27, 0x00	; 0
     eaa:	e5 e4       	ldi	r30, 0x45	; 69
     eac:	f0 e0       	ldi	r31, 0x00	; 0
     eae:	80 81       	ld	r24, Z
     eb0:	80 62       	ori	r24, 0x20	; 32
     eb2:	8c 93       	st	X, r24
				break;
			}
		}
	}

}
     eb4:	63 96       	adiw	r28, 0x13	; 19
     eb6:	0f b6       	in	r0, 0x3f	; 63
     eb8:	f8 94       	cli
     eba:	de bf       	out	0x3e, r29	; 62
     ebc:	0f be       	out	0x3f, r0	; 63
     ebe:	cd bf       	out	0x3d, r28	; 61
     ec0:	cf 91       	pop	r28
     ec2:	df 91       	pop	r29
     ec4:	08 95       	ret

00000ec6 <TIMER_vidSetPreload>:
void TIMER_vidSetPreload(u8 Copy_u8Timertype,u16 Copy_u16Preload)
{
     ec6:	df 93       	push	r29
     ec8:	cf 93       	push	r28
     eca:	00 d0       	rcall	.+0      	; 0xecc <TIMER_vidSetPreload+0x6>
     ecc:	0f 92       	push	r0
     ece:	cd b7       	in	r28, 0x3d	; 61
     ed0:	de b7       	in	r29, 0x3e	; 62
     ed2:	89 83       	std	Y+1, r24	; 0x01
     ed4:	7b 83       	std	Y+3, r23	; 0x03
     ed6:	6a 83       	std	Y+2, r22	; 0x02

	if(Copy_u8Timertype==TIMER_0)
     ed8:	89 81       	ldd	r24, Y+1	; 0x01
     eda:	88 23       	and	r24, r24
     edc:	29 f4       	brne	.+10     	; 0xee8 <TIMER_vidSetPreload+0x22>
	{
		TCNT0=Copy_u16Preload;
     ede:	e2 e5       	ldi	r30, 0x52	; 82
     ee0:	f0 e0       	ldi	r31, 0x00	; 0
     ee2:	8a 81       	ldd	r24, Y+2	; 0x02
     ee4:	80 83       	st	Z, r24
     ee6:	11 c0       	rjmp	.+34     	; 0xf0a <TIMER_vidSetPreload+0x44>
	}
	else if(Copy_u8Timertype==TIMER_1)
     ee8:	89 81       	ldd	r24, Y+1	; 0x01
     eea:	81 30       	cpi	r24, 0x01	; 1
     eec:	39 f4       	brne	.+14     	; 0xefc <TIMER_vidSetPreload+0x36>
	{
		TCNT1=Copy_u16Preload;
     eee:	ec e4       	ldi	r30, 0x4C	; 76
     ef0:	f0 e0       	ldi	r31, 0x00	; 0
     ef2:	8a 81       	ldd	r24, Y+2	; 0x02
     ef4:	9b 81       	ldd	r25, Y+3	; 0x03
     ef6:	91 83       	std	Z+1, r25	; 0x01
     ef8:	80 83       	st	Z, r24
     efa:	07 c0       	rjmp	.+14     	; 0xf0a <TIMER_vidSetPreload+0x44>
	}
	else if(Copy_u8Timertype==TIMER_2)
     efc:	89 81       	ldd	r24, Y+1	; 0x01
     efe:	82 30       	cpi	r24, 0x02	; 2
     f00:	21 f4       	brne	.+8      	; 0xf0a <TIMER_vidSetPreload+0x44>
	{
		TCNT2=Copy_u16Preload;
     f02:	e4 e4       	ldi	r30, 0x44	; 68
     f04:	f0 e0       	ldi	r31, 0x00	; 0
     f06:	8a 81       	ldd	r24, Y+2	; 0x02
     f08:	80 83       	st	Z, r24
	}
}
     f0a:	0f 90       	pop	r0
     f0c:	0f 90       	pop	r0
     f0e:	0f 90       	pop	r0
     f10:	cf 91       	pop	r28
     f12:	df 91       	pop	r29
     f14:	08 95       	ret

00000f16 <TIMER_vidSetOCR>:

void TIMER_vidSetOCR(u8 Copy_u8Timertype,u8 Copy_u8OCR)
{
     f16:	df 93       	push	r29
     f18:	cf 93       	push	r28
     f1a:	00 d0       	rcall	.+0      	; 0xf1c <TIMER_vidSetOCR+0x6>
     f1c:	cd b7       	in	r28, 0x3d	; 61
     f1e:	de b7       	in	r29, 0x3e	; 62
     f20:	89 83       	std	Y+1, r24	; 0x01
     f22:	6a 83       	std	Y+2, r22	; 0x02

	if(Copy_u8Timertype==TIMER_0)
     f24:	89 81       	ldd	r24, Y+1	; 0x01
     f26:	88 23       	and	r24, r24
     f28:	29 f4       	brne	.+10     	; 0xf34 <TIMER_vidSetOCR+0x1e>
	{
		OCR0=Copy_u8OCR;
     f2a:	ec e5       	ldi	r30, 0x5C	; 92
     f2c:	f0 e0       	ldi	r31, 0x00	; 0
     f2e:	8a 81       	ldd	r24, Y+2	; 0x02
     f30:	80 83       	st	Z, r24
     f32:	1d c0       	rjmp	.+58     	; 0xf6e <TIMER_vidSetOCR+0x58>
	}
	else if(Copy_u8Timertype==TIMER_1_CHA)
     f34:	89 81       	ldd	r24, Y+1	; 0x01
     f36:	83 30       	cpi	r24, 0x03	; 3
     f38:	41 f4       	brne	.+16     	; 0xf4a <TIMER_vidSetOCR+0x34>
	{
		OCR1A=Copy_u8OCR;
     f3a:	ea e4       	ldi	r30, 0x4A	; 74
     f3c:	f0 e0       	ldi	r31, 0x00	; 0
     f3e:	8a 81       	ldd	r24, Y+2	; 0x02
     f40:	88 2f       	mov	r24, r24
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	91 83       	std	Z+1, r25	; 0x01
     f46:	80 83       	st	Z, r24
     f48:	12 c0       	rjmp	.+36     	; 0xf6e <TIMER_vidSetOCR+0x58>
	}
	else if(Copy_u8Timertype==TIMER_1_CHB)
     f4a:	89 81       	ldd	r24, Y+1	; 0x01
     f4c:	84 30       	cpi	r24, 0x04	; 4
     f4e:	41 f4       	brne	.+16     	; 0xf60 <TIMER_vidSetOCR+0x4a>
	{
		OCR1B=Copy_u8OCR;
     f50:	e8 e4       	ldi	r30, 0x48	; 72
     f52:	f0 e0       	ldi	r31, 0x00	; 0
     f54:	8a 81       	ldd	r24, Y+2	; 0x02
     f56:	88 2f       	mov	r24, r24
     f58:	90 e0       	ldi	r25, 0x00	; 0
     f5a:	91 83       	std	Z+1, r25	; 0x01
     f5c:	80 83       	st	Z, r24
     f5e:	07 c0       	rjmp	.+14     	; 0xf6e <TIMER_vidSetOCR+0x58>
	}
	else if(Copy_u8Timertype==TIMER_2)
     f60:	89 81       	ldd	r24, Y+1	; 0x01
     f62:	82 30       	cpi	r24, 0x02	; 2
     f64:	21 f4       	brne	.+8      	; 0xf6e <TIMER_vidSetOCR+0x58>
	{
		OCR2=Copy_u8OCR;
     f66:	e3 e4       	ldi	r30, 0x43	; 67
     f68:	f0 e0       	ldi	r31, 0x00	; 0
     f6a:	8a 81       	ldd	r24, Y+2	; 0x02
     f6c:	80 83       	st	Z, r24
	}
}
     f6e:	0f 90       	pop	r0
     f70:	0f 90       	pop	r0
     f72:	cf 91       	pop	r28
     f74:	df 91       	pop	r29
     f76:	08 95       	ret

00000f78 <TIMER1_vidSetICR>:
void TIMER1_vidSetICR(u16 Copy_u16ICR)
{
     f78:	df 93       	push	r29
     f7a:	cf 93       	push	r28
     f7c:	00 d0       	rcall	.+0      	; 0xf7e <TIMER1_vidSetICR+0x6>
     f7e:	cd b7       	in	r28, 0x3d	; 61
     f80:	de b7       	in	r29, 0x3e	; 62
     f82:	9a 83       	std	Y+2, r25	; 0x02
     f84:	89 83       	std	Y+1, r24	; 0x01
	ICR1=Copy_u16ICR;
     f86:	e6 e4       	ldi	r30, 0x46	; 70
     f88:	f0 e0       	ldi	r31, 0x00	; 0
     f8a:	89 81       	ldd	r24, Y+1	; 0x01
     f8c:	9a 81       	ldd	r25, Y+2	; 0x02
     f8e:	91 83       	std	Z+1, r25	; 0x01
     f90:	80 83       	st	Z, r24
}
     f92:	0f 90       	pop	r0
     f94:	0f 90       	pop	r0
     f96:	cf 91       	pop	r28
     f98:	df 91       	pop	r29
     f9a:	08 95       	ret

00000f9c <TIMER_vidTovfIrqEnable>:
void TIMER_vidTovfIrqEnable(u8 Copy_u8Timertype)
{
     f9c:	df 93       	push	r29
     f9e:	cf 93       	push	r28
     fa0:	0f 92       	push	r0
     fa2:	cd b7       	in	r28, 0x3d	; 61
     fa4:	de b7       	in	r29, 0x3e	; 62
     fa6:	89 83       	std	Y+1, r24	; 0x01

	if(Copy_u8Timertype==TIMER_0)
     fa8:	89 81       	ldd	r24, Y+1	; 0x01
     faa:	88 23       	and	r24, r24
     fac:	41 f4       	brne	.+16     	; 0xfbe <TIMER_vidTovfIrqEnable+0x22>
	{
		SET_BIT(TIMSK,0);
     fae:	a9 e5       	ldi	r26, 0x59	; 89
     fb0:	b0 e0       	ldi	r27, 0x00	; 0
     fb2:	e9 e5       	ldi	r30, 0x59	; 89
     fb4:	f0 e0       	ldi	r31, 0x00	; 0
     fb6:	80 81       	ld	r24, Z
     fb8:	81 60       	ori	r24, 0x01	; 1
     fba:	8c 93       	st	X, r24
     fbc:	15 c0       	rjmp	.+42     	; 0xfe8 <TIMER_vidTovfIrqEnable+0x4c>
	}
	else if(Copy_u8Timertype==TIMER_1)
     fbe:	89 81       	ldd	r24, Y+1	; 0x01
     fc0:	81 30       	cpi	r24, 0x01	; 1
     fc2:	41 f4       	brne	.+16     	; 0xfd4 <TIMER_vidTovfIrqEnable+0x38>
	{
		SET_BIT(TIMSK,2);
     fc4:	a9 e5       	ldi	r26, 0x59	; 89
     fc6:	b0 e0       	ldi	r27, 0x00	; 0
     fc8:	e9 e5       	ldi	r30, 0x59	; 89
     fca:	f0 e0       	ldi	r31, 0x00	; 0
     fcc:	80 81       	ld	r24, Z
     fce:	84 60       	ori	r24, 0x04	; 4
     fd0:	8c 93       	st	X, r24
     fd2:	0a c0       	rjmp	.+20     	; 0xfe8 <TIMER_vidTovfIrqEnable+0x4c>
	}
	else if(Copy_u8Timertype==TIMER_2)
     fd4:	89 81       	ldd	r24, Y+1	; 0x01
     fd6:	82 30       	cpi	r24, 0x02	; 2
     fd8:	39 f4       	brne	.+14     	; 0xfe8 <TIMER_vidTovfIrqEnable+0x4c>
	{
		SET_BIT(TIMSK,6);
     fda:	a9 e5       	ldi	r26, 0x59	; 89
     fdc:	b0 e0       	ldi	r27, 0x00	; 0
     fde:	e9 e5       	ldi	r30, 0x59	; 89
     fe0:	f0 e0       	ldi	r31, 0x00	; 0
     fe2:	80 81       	ld	r24, Z
     fe4:	80 64       	ori	r24, 0x40	; 64
     fe6:	8c 93       	st	X, r24
	}

}
     fe8:	0f 90       	pop	r0
     fea:	cf 91       	pop	r28
     fec:	df 91       	pop	r29
     fee:	08 95       	ret

00000ff0 <TIMER_vidTovfIrqDisable>:

void TIMER_vidTovfIrqDisable(u8 Copy_u8Timertype)
{
     ff0:	df 93       	push	r29
     ff2:	cf 93       	push	r28
     ff4:	0f 92       	push	r0
     ff6:	cd b7       	in	r28, 0x3d	; 61
     ff8:	de b7       	in	r29, 0x3e	; 62
     ffa:	89 83       	std	Y+1, r24	; 0x01

	if(Copy_u8Timertype==TIMER_0)
     ffc:	89 81       	ldd	r24, Y+1	; 0x01
     ffe:	88 23       	and	r24, r24
    1000:	41 f4       	brne	.+16     	; 0x1012 <TIMER_vidTovfIrqDisable+0x22>
	{
		CLR_BIT(TIMSK,0);
    1002:	a9 e5       	ldi	r26, 0x59	; 89
    1004:	b0 e0       	ldi	r27, 0x00	; 0
    1006:	e9 e5       	ldi	r30, 0x59	; 89
    1008:	f0 e0       	ldi	r31, 0x00	; 0
    100a:	80 81       	ld	r24, Z
    100c:	8e 7f       	andi	r24, 0xFE	; 254
    100e:	8c 93       	st	X, r24
    1010:	15 c0       	rjmp	.+42     	; 0x103c <TIMER_vidTovfIrqDisable+0x4c>
	}
	else if(Copy_u8Timertype==TIMER_1)
    1012:	89 81       	ldd	r24, Y+1	; 0x01
    1014:	81 30       	cpi	r24, 0x01	; 1
    1016:	41 f4       	brne	.+16     	; 0x1028 <TIMER_vidTovfIrqDisable+0x38>
	{
		CLR_BIT(TIMSK,2);
    1018:	a9 e5       	ldi	r26, 0x59	; 89
    101a:	b0 e0       	ldi	r27, 0x00	; 0
    101c:	e9 e5       	ldi	r30, 0x59	; 89
    101e:	f0 e0       	ldi	r31, 0x00	; 0
    1020:	80 81       	ld	r24, Z
    1022:	8b 7f       	andi	r24, 0xFB	; 251
    1024:	8c 93       	st	X, r24
    1026:	0a c0       	rjmp	.+20     	; 0x103c <TIMER_vidTovfIrqDisable+0x4c>
	}
	else if(Copy_u8Timertype==TIMER_2)
    1028:	89 81       	ldd	r24, Y+1	; 0x01
    102a:	82 30       	cpi	r24, 0x02	; 2
    102c:	39 f4       	brne	.+14     	; 0x103c <TIMER_vidTovfIrqDisable+0x4c>
	{
		CLR_BIT(TIMSK,6);
    102e:	a9 e5       	ldi	r26, 0x59	; 89
    1030:	b0 e0       	ldi	r27, 0x00	; 0
    1032:	e9 e5       	ldi	r30, 0x59	; 89
    1034:	f0 e0       	ldi	r31, 0x00	; 0
    1036:	80 81       	ld	r24, Z
    1038:	8f 7b       	andi	r24, 0xBF	; 191
    103a:	8c 93       	st	X, r24
	}

}
    103c:	0f 90       	pop	r0
    103e:	cf 91       	pop	r28
    1040:	df 91       	pop	r29
    1042:	08 95       	ret

00001044 <TIMER_vidCtcIrqEnable>:

void TIMER_vidCtcIrqEnable(u8 Copy_u8Timertype)
{
    1044:	df 93       	push	r29
    1046:	cf 93       	push	r28
    1048:	0f 92       	push	r0
    104a:	cd b7       	in	r28, 0x3d	; 61
    104c:	de b7       	in	r29, 0x3e	; 62
    104e:	89 83       	std	Y+1, r24	; 0x01

	if(Copy_u8Timertype==TIMER_0)
    1050:	89 81       	ldd	r24, Y+1	; 0x01
    1052:	88 23       	and	r24, r24
    1054:	41 f4       	brne	.+16     	; 0x1066 <TIMER_vidCtcIrqEnable+0x22>
	{
		SET_BIT(TIMSK,1);
    1056:	a9 e5       	ldi	r26, 0x59	; 89
    1058:	b0 e0       	ldi	r27, 0x00	; 0
    105a:	e9 e5       	ldi	r30, 0x59	; 89
    105c:	f0 e0       	ldi	r31, 0x00	; 0
    105e:	80 81       	ld	r24, Z
    1060:	82 60       	ori	r24, 0x02	; 2
    1062:	8c 93       	st	X, r24
    1064:	20 c0       	rjmp	.+64     	; 0x10a6 <TIMER_vidCtcIrqEnable+0x62>
	}
	else if(Copy_u8Timertype==TIMER_1_CHA)
    1066:	89 81       	ldd	r24, Y+1	; 0x01
    1068:	83 30       	cpi	r24, 0x03	; 3
    106a:	41 f4       	brne	.+16     	; 0x107c <TIMER_vidCtcIrqEnable+0x38>
	{
		SET_BIT(TIMSK,4);
    106c:	a9 e5       	ldi	r26, 0x59	; 89
    106e:	b0 e0       	ldi	r27, 0x00	; 0
    1070:	e9 e5       	ldi	r30, 0x59	; 89
    1072:	f0 e0       	ldi	r31, 0x00	; 0
    1074:	80 81       	ld	r24, Z
    1076:	80 61       	ori	r24, 0x10	; 16
    1078:	8c 93       	st	X, r24
    107a:	15 c0       	rjmp	.+42     	; 0x10a6 <TIMER_vidCtcIrqEnable+0x62>
	}
	else if(Copy_u8Timertype==TIMER_1_CHB)
    107c:	89 81       	ldd	r24, Y+1	; 0x01
    107e:	84 30       	cpi	r24, 0x04	; 4
    1080:	41 f4       	brne	.+16     	; 0x1092 <TIMER_vidCtcIrqEnable+0x4e>
	{
		SET_BIT(TIMSK,3);
    1082:	a9 e5       	ldi	r26, 0x59	; 89
    1084:	b0 e0       	ldi	r27, 0x00	; 0
    1086:	e9 e5       	ldi	r30, 0x59	; 89
    1088:	f0 e0       	ldi	r31, 0x00	; 0
    108a:	80 81       	ld	r24, Z
    108c:	88 60       	ori	r24, 0x08	; 8
    108e:	8c 93       	st	X, r24
    1090:	0a c0       	rjmp	.+20     	; 0x10a6 <TIMER_vidCtcIrqEnable+0x62>
	}
	else if(Copy_u8Timertype==TIMER_2)
    1092:	89 81       	ldd	r24, Y+1	; 0x01
    1094:	82 30       	cpi	r24, 0x02	; 2
    1096:	39 f4       	brne	.+14     	; 0x10a6 <TIMER_vidCtcIrqEnable+0x62>
	{
		SET_BIT(TIMSK,7);
    1098:	a9 e5       	ldi	r26, 0x59	; 89
    109a:	b0 e0       	ldi	r27, 0x00	; 0
    109c:	e9 e5       	ldi	r30, 0x59	; 89
    109e:	f0 e0       	ldi	r31, 0x00	; 0
    10a0:	80 81       	ld	r24, Z
    10a2:	80 68       	ori	r24, 0x80	; 128
    10a4:	8c 93       	st	X, r24

	}

}
    10a6:	0f 90       	pop	r0
    10a8:	cf 91       	pop	r28
    10aa:	df 91       	pop	r29
    10ac:	08 95       	ret

000010ae <TIMER_vidCtcIrqDisable>:

void TIMER_vidCtcIrqDisable(u8 Copy_u8Timertype)
{
    10ae:	df 93       	push	r29
    10b0:	cf 93       	push	r28
    10b2:	0f 92       	push	r0
    10b4:	cd b7       	in	r28, 0x3d	; 61
    10b6:	de b7       	in	r29, 0x3e	; 62
    10b8:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8Timertype==TIMER_0)
    10ba:	89 81       	ldd	r24, Y+1	; 0x01
    10bc:	88 23       	and	r24, r24
    10be:	41 f4       	brne	.+16     	; 0x10d0 <TIMER_vidCtcIrqDisable+0x22>
	{
		CLR_BIT(TIMSK,1);
    10c0:	a9 e5       	ldi	r26, 0x59	; 89
    10c2:	b0 e0       	ldi	r27, 0x00	; 0
    10c4:	e9 e5       	ldi	r30, 0x59	; 89
    10c6:	f0 e0       	ldi	r31, 0x00	; 0
    10c8:	80 81       	ld	r24, Z
    10ca:	8d 7f       	andi	r24, 0xFD	; 253
    10cc:	8c 93       	st	X, r24
    10ce:	20 c0       	rjmp	.+64     	; 0x1110 <TIMER_vidCtcIrqDisable+0x62>
	}
	else if(Copy_u8Timertype==TIMER_1_CHA)
    10d0:	89 81       	ldd	r24, Y+1	; 0x01
    10d2:	83 30       	cpi	r24, 0x03	; 3
    10d4:	41 f4       	brne	.+16     	; 0x10e6 <TIMER_vidCtcIrqDisable+0x38>
	{
		CLR_BIT(TIMSK,4);
    10d6:	a9 e5       	ldi	r26, 0x59	; 89
    10d8:	b0 e0       	ldi	r27, 0x00	; 0
    10da:	e9 e5       	ldi	r30, 0x59	; 89
    10dc:	f0 e0       	ldi	r31, 0x00	; 0
    10de:	80 81       	ld	r24, Z
    10e0:	8f 7e       	andi	r24, 0xEF	; 239
    10e2:	8c 93       	st	X, r24
    10e4:	15 c0       	rjmp	.+42     	; 0x1110 <TIMER_vidCtcIrqDisable+0x62>
	}
	else if(Copy_u8Timertype==TIMER_1_CHB)
    10e6:	89 81       	ldd	r24, Y+1	; 0x01
    10e8:	84 30       	cpi	r24, 0x04	; 4
    10ea:	41 f4       	brne	.+16     	; 0x10fc <TIMER_vidCtcIrqDisable+0x4e>
	{
		CLR_BIT(TIMSK,3);
    10ec:	a9 e5       	ldi	r26, 0x59	; 89
    10ee:	b0 e0       	ldi	r27, 0x00	; 0
    10f0:	e9 e5       	ldi	r30, 0x59	; 89
    10f2:	f0 e0       	ldi	r31, 0x00	; 0
    10f4:	80 81       	ld	r24, Z
    10f6:	87 7f       	andi	r24, 0xF7	; 247
    10f8:	8c 93       	st	X, r24
    10fa:	0a c0       	rjmp	.+20     	; 0x1110 <TIMER_vidCtcIrqDisable+0x62>
	}
	else if(Copy_u8Timertype==TIMER_2)
    10fc:	89 81       	ldd	r24, Y+1	; 0x01
    10fe:	82 30       	cpi	r24, 0x02	; 2
    1100:	39 f4       	brne	.+14     	; 0x1110 <TIMER_vidCtcIrqDisable+0x62>
	{
		CLR_BIT(TIMSK,7);
    1102:	a9 e5       	ldi	r26, 0x59	; 89
    1104:	b0 e0       	ldi	r27, 0x00	; 0
    1106:	e9 e5       	ldi	r30, 0x59	; 89
    1108:	f0 e0       	ldi	r31, 0x00	; 0
    110a:	80 81       	ld	r24, Z
    110c:	8f 77       	andi	r24, 0x7F	; 127
    110e:	8c 93       	st	X, r24
	}
}
    1110:	0f 90       	pop	r0
    1112:	cf 91       	pop	r28
    1114:	df 91       	pop	r29
    1116:	08 95       	ret

00001118 <main>:
#include "Timer_int.h"
#include "GIE_int.h"
#include <util/delay.h>

void main(void)
{
    1118:	df 93       	push	r29
    111a:	cf 93       	push	r28
    111c:	cd b7       	in	r28, 0x3d	; 61
    111e:	de b7       	in	r29, 0x3e	; 62
    1120:	ff cf       	rjmp	.-2      	; 0x1120 <main+0x8>

00001122 <_exit>:
    1122:	f8 94       	cli

00001124 <__stop_program>:
    1124:	ff cf       	rjmp	.-2      	; 0x1124 <__stop_program>
